package com.dasannetworks.vn.sb.model.impl;

import com.dasannetworks.vn.sb.model.DeviceExtOrder;
import com.dasannetworks.vn.sb.model.DeviceExtOrderModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DeviceExtOrder service. Represents a row in the &quot;tms_DeviceExtOrder&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dasannetworks.vn.sb.model.DeviceExtOrderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DeviceExtOrderImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DeviceExtOrderImpl
 * @see com.dasannetworks.vn.sb.model.DeviceExtOrder
 * @see com.dasannetworks.vn.sb.model.DeviceExtOrderModel
 * @generated
 */
public class DeviceExtOrderModelImpl extends BaseModelImpl<DeviceExtOrder>
    implements DeviceExtOrderModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a device ext order model instance should use the {@link com.dasannetworks.vn.sb.model.DeviceExtOrder} interface instead.
     */
    public static final String TABLE_NAME = "tms_DeviceExtOrder";
    public static final Object[][] TABLE_COLUMNS = {
            { "deviceExtOrderId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "deviceExtOrderNumber", Types.VARCHAR },
            { "note", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table tms_DeviceExtOrder (deviceExtOrderId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,deviceExtOrderNumber VARCHAR(75) null,note VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table tms_DeviceExtOrder";
    public static final String ORDER_BY_JPQL = " ORDER BY deviceExtOrder.deviceExtOrderId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tms_DeviceExtOrder.deviceExtOrderId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.dasannetworks.vn.sb.model.DeviceExtOrder"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.dasannetworks.vn.sb.model.DeviceExtOrder"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.dasannetworks.vn.sb.model.DeviceExtOrder"),
            true);
    public static long DEVICEEXTORDERNUMBER_COLUMN_BITMASK = 1L;
    public static long DEVICEEXTORDERID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.dasannetworks.vn.sb.model.DeviceExtOrder"));
    private static ClassLoader _classLoader = DeviceExtOrder.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            DeviceExtOrder.class
        };
    private long _deviceExtOrderId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private String _deviceExtOrderNumber;
    private String _originalDeviceExtOrderNumber;
    private String _note;
    private long _columnBitmask;
    private DeviceExtOrder _escapedModel;

    public DeviceExtOrderModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _deviceExtOrderId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setDeviceExtOrderId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _deviceExtOrderId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return DeviceExtOrder.class;
    }

    @Override
    public String getModelClassName() {
        return DeviceExtOrder.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("deviceExtOrderId", getDeviceExtOrderId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("deviceExtOrderNumber", getDeviceExtOrderNumber());
        attributes.put("note", getNote());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long deviceExtOrderId = (Long) attributes.get("deviceExtOrderId");

        if (deviceExtOrderId != null) {
            setDeviceExtOrderId(deviceExtOrderId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String deviceExtOrderNumber = (String) attributes.get(
                "deviceExtOrderNumber");

        if (deviceExtOrderNumber != null) {
            setDeviceExtOrderNumber(deviceExtOrderNumber);
        }

        String note = (String) attributes.get("note");

        if (note != null) {
            setNote(note);
        }
    }

    @Override
    public long getDeviceExtOrderId() {
        return _deviceExtOrderId;
    }

    @Override
    public void setDeviceExtOrderId(long deviceExtOrderId) {
        _deviceExtOrderId = deviceExtOrderId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getDeviceExtOrderNumber() {
        if (_deviceExtOrderNumber == null) {
            return StringPool.BLANK;
        } else {
            return _deviceExtOrderNumber;
        }
    }

    @Override
    public void setDeviceExtOrderNumber(String deviceExtOrderNumber) {
        _columnBitmask |= DEVICEEXTORDERNUMBER_COLUMN_BITMASK;

        if (_originalDeviceExtOrderNumber == null) {
            _originalDeviceExtOrderNumber = _deviceExtOrderNumber;
        }

        _deviceExtOrderNumber = deviceExtOrderNumber;
    }

    public String getOriginalDeviceExtOrderNumber() {
        return GetterUtil.getString(_originalDeviceExtOrderNumber);
    }

    @Override
    public String getNote() {
        if (_note == null) {
            return StringPool.BLANK;
        } else {
            return _note;
        }
    }

    @Override
    public void setNote(String note) {
        _note = note;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            DeviceExtOrder.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public DeviceExtOrder toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (DeviceExtOrder) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        DeviceExtOrderImpl deviceExtOrderImpl = new DeviceExtOrderImpl();

        deviceExtOrderImpl.setDeviceExtOrderId(getDeviceExtOrderId());
        deviceExtOrderImpl.setCompanyId(getCompanyId());
        deviceExtOrderImpl.setUserId(getUserId());
        deviceExtOrderImpl.setUserName(getUserName());
        deviceExtOrderImpl.setCreateDate(getCreateDate());
        deviceExtOrderImpl.setModifiedDate(getModifiedDate());
        deviceExtOrderImpl.setDeviceExtOrderNumber(getDeviceExtOrderNumber());
        deviceExtOrderImpl.setNote(getNote());

        deviceExtOrderImpl.resetOriginalValues();

        return deviceExtOrderImpl;
    }

    @Override
    public int compareTo(DeviceExtOrder deviceExtOrder) {
        long primaryKey = deviceExtOrder.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof DeviceExtOrder)) {
            return false;
        }

        DeviceExtOrder deviceExtOrder = (DeviceExtOrder) obj;

        long primaryKey = deviceExtOrder.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        DeviceExtOrderModelImpl deviceExtOrderModelImpl = this;

        deviceExtOrderModelImpl._originalDeviceExtOrderNumber = deviceExtOrderModelImpl._deviceExtOrderNumber;

        deviceExtOrderModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<DeviceExtOrder> toCacheModel() {
        DeviceExtOrderCacheModel deviceExtOrderCacheModel = new DeviceExtOrderCacheModel();

        deviceExtOrderCacheModel.deviceExtOrderId = getDeviceExtOrderId();

        deviceExtOrderCacheModel.companyId = getCompanyId();

        deviceExtOrderCacheModel.userId = getUserId();

        deviceExtOrderCacheModel.userName = getUserName();

        String userName = deviceExtOrderCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            deviceExtOrderCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            deviceExtOrderCacheModel.createDate = createDate.getTime();
        } else {
            deviceExtOrderCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            deviceExtOrderCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            deviceExtOrderCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        deviceExtOrderCacheModel.deviceExtOrderNumber = getDeviceExtOrderNumber();

        String deviceExtOrderNumber = deviceExtOrderCacheModel.deviceExtOrderNumber;

        if ((deviceExtOrderNumber != null) &&
                (deviceExtOrderNumber.length() == 0)) {
            deviceExtOrderCacheModel.deviceExtOrderNumber = null;
        }

        deviceExtOrderCacheModel.note = getNote();

        String note = deviceExtOrderCacheModel.note;

        if ((note != null) && (note.length() == 0)) {
            deviceExtOrderCacheModel.note = null;
        }

        return deviceExtOrderCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(17);

        sb.append("{deviceExtOrderId=");
        sb.append(getDeviceExtOrderId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", deviceExtOrderNumber=");
        sb.append(getDeviceExtOrderNumber());
        sb.append(", note=");
        sb.append(getNote());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(28);

        sb.append("<model><model-name>");
        sb.append("com.dasannetworks.vn.sb.model.DeviceExtOrder");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>deviceExtOrderId</column-name><column-value><![CDATA[");
        sb.append(getDeviceExtOrderId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deviceExtOrderNumber</column-name><column-value><![CDATA[");
        sb.append(getDeviceExtOrderNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>note</column-name><column-value><![CDATA[");
        sb.append(getNote());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
