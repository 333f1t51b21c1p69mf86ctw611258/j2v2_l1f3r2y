package com.dasannetworks.vn.sb.model.impl;

import com.dasannetworks.vn.sb.model.RmaRequest;
import com.dasannetworks.vn.sb.model.RmaRequestModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RmaRequest service. Represents a row in the &quot;tms_RmaRequest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dasannetworks.vn.sb.model.RmaRequestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RmaRequestImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RmaRequestImpl
 * @see com.dasannetworks.vn.sb.model.RmaRequest
 * @see com.dasannetworks.vn.sb.model.RmaRequestModel
 * @generated
 */
public class RmaRequestModelImpl extends BaseModelImpl<RmaRequest>
    implements RmaRequestModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a rma request model instance should use the {@link com.dasannetworks.vn.sb.model.RmaRequest} interface instead.
     */
    public static final String TABLE_NAME = "tms_RmaRequest";
    public static final Object[][] TABLE_COLUMNS = {
            { "rmaRequestId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "groupId", Types.BIGINT },
            { "rmaRequestNumber", Types.VARCHAR },
            { "customerId", Types.BIGINT },
            { "cusInCharge", Types.VARCHAR },
            { "cusEmail", Types.VARCHAR },
            { "cusPhone", Types.VARCHAR },
            { "cusAddress", Types.VARCHAR },
            { "creatingEstReturnDate", Types.TIMESTAMP },
            { "creatingAssignedDate", Types.TIMESTAMP },
            { "creatingNote", Types.VARCHAR },
            { "creatingImportedFileName", Types.VARCHAR },
            { "status", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table tms_RmaRequest (rmaRequestId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,groupId LONG,rmaRequestNumber VARCHAR(75) null,customerId LONG,cusInCharge VARCHAR(75) null,cusEmail VARCHAR(75) null,cusPhone VARCHAR(75) null,cusAddress VARCHAR(75) null,creatingEstReturnDate DATE null,creatingAssignedDate DATE null,creatingNote VARCHAR(75) null,creatingImportedFileName VARCHAR(75) null,status INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table tms_RmaRequest";
    public static final String ORDER_BY_JPQL = " ORDER BY rmaRequest.rmaRequestId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tms_RmaRequest.rmaRequestId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.dasannetworks.vn.sb.model.RmaRequest"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.dasannetworks.vn.sb.model.RmaRequest"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.dasannetworks.vn.sb.model.RmaRequest"),
            true);
    public static long CUSTOMERID_COLUMN_BITMASK = 1L;
    public static long RMAREQUESTNUMBER_COLUMN_BITMASK = 2L;
    public static long STATUS_COLUMN_BITMASK = 4L;
    public static long RMAREQUESTID_COLUMN_BITMASK = 8L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.dasannetworks.vn.sb.model.RmaRequest"));
    private static ClassLoader _classLoader = RmaRequest.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            RmaRequest.class
        };
    private long _rmaRequestId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private long _groupId;
    private String _rmaRequestNumber;
    private String _originalRmaRequestNumber;
    private Long _customerId;
    private Long _originalCustomerId;
    private boolean _setOriginalCustomerId;
    private String _cusInCharge;
    private String _cusEmail;
    private String _cusPhone;
    private String _cusAddress;
    private Date _creatingEstReturnDate;
    private Date _creatingAssignedDate;
    private String _creatingNote;
    private String _creatingImportedFileName;
    private int _status;
    private int _originalStatus;
    private boolean _setOriginalStatus;
    private long _columnBitmask;
    private RmaRequest _escapedModel;

    public RmaRequestModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _rmaRequestId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setRmaRequestId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _rmaRequestId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return RmaRequest.class;
    }

    @Override
    public String getModelClassName() {
        return RmaRequest.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("rmaRequestId", getRmaRequestId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("groupId", getGroupId());
        attributes.put("rmaRequestNumber", getRmaRequestNumber());
        attributes.put("customerId", getCustomerId());
        attributes.put("cusInCharge", getCusInCharge());
        attributes.put("cusEmail", getCusEmail());
        attributes.put("cusPhone", getCusPhone());
        attributes.put("cusAddress", getCusAddress());
        attributes.put("creatingEstReturnDate", getCreatingEstReturnDate());
        attributes.put("creatingAssignedDate", getCreatingAssignedDate());
        attributes.put("creatingNote", getCreatingNote());
        attributes.put("creatingImportedFileName", getCreatingImportedFileName());
        attributes.put("status", getStatus());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long rmaRequestId = (Long) attributes.get("rmaRequestId");

        if (rmaRequestId != null) {
            setRmaRequestId(rmaRequestId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        String rmaRequestNumber = (String) attributes.get("rmaRequestNumber");

        if (rmaRequestNumber != null) {
            setRmaRequestNumber(rmaRequestNumber);
        }

        Long customerId = (Long) attributes.get("customerId");

        if (customerId != null) {
            setCustomerId(customerId);
        }

        String cusInCharge = (String) attributes.get("cusInCharge");

        if (cusInCharge != null) {
            setCusInCharge(cusInCharge);
        }

        String cusEmail = (String) attributes.get("cusEmail");

        if (cusEmail != null) {
            setCusEmail(cusEmail);
        }

        String cusPhone = (String) attributes.get("cusPhone");

        if (cusPhone != null) {
            setCusPhone(cusPhone);
        }

        String cusAddress = (String) attributes.get("cusAddress");

        if (cusAddress != null) {
            setCusAddress(cusAddress);
        }

        Date creatingEstReturnDate = (Date) attributes.get(
                "creatingEstReturnDate");

        if (creatingEstReturnDate != null) {
            setCreatingEstReturnDate(creatingEstReturnDate);
        }

        Date creatingAssignedDate = (Date) attributes.get(
                "creatingAssignedDate");

        if (creatingAssignedDate != null) {
            setCreatingAssignedDate(creatingAssignedDate);
        }

        String creatingNote = (String) attributes.get("creatingNote");

        if (creatingNote != null) {
            setCreatingNote(creatingNote);
        }

        String creatingImportedFileName = (String) attributes.get(
                "creatingImportedFileName");

        if (creatingImportedFileName != null) {
            setCreatingImportedFileName(creatingImportedFileName);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }
    }

    @Override
    public long getRmaRequestId() {
        return _rmaRequestId;
    }

    @Override
    public void setRmaRequestId(long rmaRequestId) {
        _rmaRequestId = rmaRequestId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @Override
    public String getRmaRequestNumber() {
        if (_rmaRequestNumber == null) {
            return StringPool.BLANK;
        } else {
            return _rmaRequestNumber;
        }
    }

    @Override
    public void setRmaRequestNumber(String rmaRequestNumber) {
        _columnBitmask |= RMAREQUESTNUMBER_COLUMN_BITMASK;

        if (_originalRmaRequestNumber == null) {
            _originalRmaRequestNumber = _rmaRequestNumber;
        }

        _rmaRequestNumber = rmaRequestNumber;
    }

    public String getOriginalRmaRequestNumber() {
        return GetterUtil.getString(_originalRmaRequestNumber);
    }

    @Override
    public Long getCustomerId() {
        return _customerId;
    }

    @Override
    public void setCustomerId(Long customerId) {
        _columnBitmask |= CUSTOMERID_COLUMN_BITMASK;

        if (!_setOriginalCustomerId) {
            _setOriginalCustomerId = true;

            _originalCustomerId = _customerId;
        }

        _customerId = customerId;
    }

    public Long getOriginalCustomerId() {
        return _originalCustomerId;
    }

    @Override
    public String getCusInCharge() {
        if (_cusInCharge == null) {
            return StringPool.BLANK;
        } else {
            return _cusInCharge;
        }
    }

    @Override
    public void setCusInCharge(String cusInCharge) {
        _cusInCharge = cusInCharge;
    }

    @Override
    public String getCusEmail() {
        if (_cusEmail == null) {
            return StringPool.BLANK;
        } else {
            return _cusEmail;
        }
    }

    @Override
    public void setCusEmail(String cusEmail) {
        _cusEmail = cusEmail;
    }

    @Override
    public String getCusPhone() {
        if (_cusPhone == null) {
            return StringPool.BLANK;
        } else {
            return _cusPhone;
        }
    }

    @Override
    public void setCusPhone(String cusPhone) {
        _cusPhone = cusPhone;
    }

    @Override
    public String getCusAddress() {
        if (_cusAddress == null) {
            return StringPool.BLANK;
        } else {
            return _cusAddress;
        }
    }

    @Override
    public void setCusAddress(String cusAddress) {
        _cusAddress = cusAddress;
    }

    @Override
    public Date getCreatingEstReturnDate() {
        return _creatingEstReturnDate;
    }

    @Override
    public void setCreatingEstReturnDate(Date creatingEstReturnDate) {
        _creatingEstReturnDate = creatingEstReturnDate;
    }

    @Override
    public Date getCreatingAssignedDate() {
        return _creatingAssignedDate;
    }

    @Override
    public void setCreatingAssignedDate(Date creatingAssignedDate) {
        _creatingAssignedDate = creatingAssignedDate;
    }

    @Override
    public String getCreatingNote() {
        if (_creatingNote == null) {
            return StringPool.BLANK;
        } else {
            return _creatingNote;
        }
    }

    @Override
    public void setCreatingNote(String creatingNote) {
        _creatingNote = creatingNote;
    }

    @Override
    public String getCreatingImportedFileName() {
        if (_creatingImportedFileName == null) {
            return StringPool.BLANK;
        } else {
            return _creatingImportedFileName;
        }
    }

    @Override
    public void setCreatingImportedFileName(String creatingImportedFileName) {
        _creatingImportedFileName = creatingImportedFileName;
    }

    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _columnBitmask |= STATUS_COLUMN_BITMASK;

        if (!_setOriginalStatus) {
            _setOriginalStatus = true;

            _originalStatus = _status;
        }

        _status = status;
    }

    public int getOriginalStatus() {
        return _originalStatus;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            RmaRequest.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public RmaRequest toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (RmaRequest) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RmaRequestImpl rmaRequestImpl = new RmaRequestImpl();

        rmaRequestImpl.setRmaRequestId(getRmaRequestId());
        rmaRequestImpl.setCompanyId(getCompanyId());
        rmaRequestImpl.setUserId(getUserId());
        rmaRequestImpl.setUserName(getUserName());
        rmaRequestImpl.setCreateDate(getCreateDate());
        rmaRequestImpl.setModifiedDate(getModifiedDate());
        rmaRequestImpl.setGroupId(getGroupId());
        rmaRequestImpl.setRmaRequestNumber(getRmaRequestNumber());
        rmaRequestImpl.setCustomerId(getCustomerId());
        rmaRequestImpl.setCusInCharge(getCusInCharge());
        rmaRequestImpl.setCusEmail(getCusEmail());
        rmaRequestImpl.setCusPhone(getCusPhone());
        rmaRequestImpl.setCusAddress(getCusAddress());
        rmaRequestImpl.setCreatingEstReturnDate(getCreatingEstReturnDate());
        rmaRequestImpl.setCreatingAssignedDate(getCreatingAssignedDate());
        rmaRequestImpl.setCreatingNote(getCreatingNote());
        rmaRequestImpl.setCreatingImportedFileName(getCreatingImportedFileName());
        rmaRequestImpl.setStatus(getStatus());

        rmaRequestImpl.resetOriginalValues();

        return rmaRequestImpl;
    }

    @Override
    public int compareTo(RmaRequest rmaRequest) {
        long primaryKey = rmaRequest.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof RmaRequest)) {
            return false;
        }

        RmaRequest rmaRequest = (RmaRequest) obj;

        long primaryKey = rmaRequest.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        RmaRequestModelImpl rmaRequestModelImpl = this;

        rmaRequestModelImpl._originalRmaRequestNumber = rmaRequestModelImpl._rmaRequestNumber;

        rmaRequestModelImpl._originalCustomerId = rmaRequestModelImpl._customerId;

        rmaRequestModelImpl._setOriginalCustomerId = false;

        rmaRequestModelImpl._originalStatus = rmaRequestModelImpl._status;

        rmaRequestModelImpl._setOriginalStatus = false;

        rmaRequestModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<RmaRequest> toCacheModel() {
        RmaRequestCacheModel rmaRequestCacheModel = new RmaRequestCacheModel();

        rmaRequestCacheModel.rmaRequestId = getRmaRequestId();

        rmaRequestCacheModel.companyId = getCompanyId();

        rmaRequestCacheModel.userId = getUserId();

        rmaRequestCacheModel.userName = getUserName();

        String userName = rmaRequestCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            rmaRequestCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            rmaRequestCacheModel.createDate = createDate.getTime();
        } else {
            rmaRequestCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            rmaRequestCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            rmaRequestCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        rmaRequestCacheModel.groupId = getGroupId();

        rmaRequestCacheModel.rmaRequestNumber = getRmaRequestNumber();

        String rmaRequestNumber = rmaRequestCacheModel.rmaRequestNumber;

        if ((rmaRequestNumber != null) && (rmaRequestNumber.length() == 0)) {
            rmaRequestCacheModel.rmaRequestNumber = null;
        }

        rmaRequestCacheModel.customerId = getCustomerId();

        rmaRequestCacheModel.cusInCharge = getCusInCharge();

        String cusInCharge = rmaRequestCacheModel.cusInCharge;

        if ((cusInCharge != null) && (cusInCharge.length() == 0)) {
            rmaRequestCacheModel.cusInCharge = null;
        }

        rmaRequestCacheModel.cusEmail = getCusEmail();

        String cusEmail = rmaRequestCacheModel.cusEmail;

        if ((cusEmail != null) && (cusEmail.length() == 0)) {
            rmaRequestCacheModel.cusEmail = null;
        }

        rmaRequestCacheModel.cusPhone = getCusPhone();

        String cusPhone = rmaRequestCacheModel.cusPhone;

        if ((cusPhone != null) && (cusPhone.length() == 0)) {
            rmaRequestCacheModel.cusPhone = null;
        }

        rmaRequestCacheModel.cusAddress = getCusAddress();

        String cusAddress = rmaRequestCacheModel.cusAddress;

        if ((cusAddress != null) && (cusAddress.length() == 0)) {
            rmaRequestCacheModel.cusAddress = null;
        }

        Date creatingEstReturnDate = getCreatingEstReturnDate();

        if (creatingEstReturnDate != null) {
            rmaRequestCacheModel.creatingEstReturnDate = creatingEstReturnDate.getTime();
        } else {
            rmaRequestCacheModel.creatingEstReturnDate = Long.MIN_VALUE;
        }

        Date creatingAssignedDate = getCreatingAssignedDate();

        if (creatingAssignedDate != null) {
            rmaRequestCacheModel.creatingAssignedDate = creatingAssignedDate.getTime();
        } else {
            rmaRequestCacheModel.creatingAssignedDate = Long.MIN_VALUE;
        }

        rmaRequestCacheModel.creatingNote = getCreatingNote();

        String creatingNote = rmaRequestCacheModel.creatingNote;

        if ((creatingNote != null) && (creatingNote.length() == 0)) {
            rmaRequestCacheModel.creatingNote = null;
        }

        rmaRequestCacheModel.creatingImportedFileName = getCreatingImportedFileName();

        String creatingImportedFileName = rmaRequestCacheModel.creatingImportedFileName;

        if ((creatingImportedFileName != null) &&
                (creatingImportedFileName.length() == 0)) {
            rmaRequestCacheModel.creatingImportedFileName = null;
        }

        rmaRequestCacheModel.status = getStatus();

        return rmaRequestCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(37);

        sb.append("{rmaRequestId=");
        sb.append(getRmaRequestId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", rmaRequestNumber=");
        sb.append(getRmaRequestNumber());
        sb.append(", customerId=");
        sb.append(getCustomerId());
        sb.append(", cusInCharge=");
        sb.append(getCusInCharge());
        sb.append(", cusEmail=");
        sb.append(getCusEmail());
        sb.append(", cusPhone=");
        sb.append(getCusPhone());
        sb.append(", cusAddress=");
        sb.append(getCusAddress());
        sb.append(", creatingEstReturnDate=");
        sb.append(getCreatingEstReturnDate());
        sb.append(", creatingAssignedDate=");
        sb.append(getCreatingAssignedDate());
        sb.append(", creatingNote=");
        sb.append(getCreatingNote());
        sb.append(", creatingImportedFileName=");
        sb.append(getCreatingImportedFileName());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(58);

        sb.append("<model><model-name>");
        sb.append("com.dasannetworks.vn.sb.model.RmaRequest");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>rmaRequestId</column-name><column-value><![CDATA[");
        sb.append(getRmaRequestId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rmaRequestNumber</column-name><column-value><![CDATA[");
        sb.append(getRmaRequestNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerId</column-name><column-value><![CDATA[");
        sb.append(getCustomerId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusInCharge</column-name><column-value><![CDATA[");
        sb.append(getCusInCharge());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusEmail</column-name><column-value><![CDATA[");
        sb.append(getCusEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusPhone</column-name><column-value><![CDATA[");
        sb.append(getCusPhone());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusAddress</column-name><column-value><![CDATA[");
        sb.append(getCusAddress());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingEstReturnDate</column-name><column-value><![CDATA[");
        sb.append(getCreatingEstReturnDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingAssignedDate</column-name><column-value><![CDATA[");
        sb.append(getCreatingAssignedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingNote</column-name><column-value><![CDATA[");
        sb.append(getCreatingNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingImportedFileName</column-name><column-value><![CDATA[");
        sb.append(getCreatingImportedFileName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
