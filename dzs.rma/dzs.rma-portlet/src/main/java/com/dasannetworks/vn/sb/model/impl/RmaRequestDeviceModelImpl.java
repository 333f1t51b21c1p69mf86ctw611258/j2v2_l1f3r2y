package com.dasannetworks.vn.sb.model.impl;

import com.dasannetworks.vn.sb.model.RmaRequestDevice;
import com.dasannetworks.vn.sb.model.RmaRequestDeviceModel;
import com.dasannetworks.vn.sb.service.persistence.RmaRequestDevicePK;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RmaRequestDevice service. Represents a row in the &quot;tms_RmaRequestDevice&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dasannetworks.vn.sb.model.RmaRequestDeviceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RmaRequestDeviceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RmaRequestDeviceImpl
 * @see com.dasannetworks.vn.sb.model.RmaRequestDevice
 * @see com.dasannetworks.vn.sb.model.RmaRequestDeviceModel
 * @generated
 */
public class RmaRequestDeviceModelImpl extends BaseModelImpl<RmaRequestDevice>
    implements RmaRequestDeviceModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a rma request device model instance should use the {@link com.dasannetworks.vn.sb.model.RmaRequestDevice} interface instead.
     */
    public static final String TABLE_NAME = "tms_RmaRequestDevice";
    public static final Object[][] TABLE_COLUMNS = {
            { "rmaRequestId", Types.BIGINT },
            { "deviceId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "originalSerialNumber", Types.VARCHAR },
            { "faultyDate", Types.TIMESTAMP },
            { "faultyNote", Types.VARCHAR },
            { "action", Types.VARCHAR },
            { "partnerId", Types.BIGINT },
            { "partnerInCharge", Types.VARCHAR },
            { "partnerEmail", Types.VARCHAR },
            { "partnerPhone", Types.VARCHAR },
            { "partnerAddress", Types.VARCHAR },
            { "sendingEstReturnDate", Types.TIMESTAMP },
            { "sendingReturnedDate", Types.TIMESTAMP },
            { "sendingAssignedDate", Types.TIMESTAMP },
            { "sendingNote", Types.VARCHAR },
            { "receivingReturnedDate", Types.TIMESTAMP },
            { "receivingNote", Types.VARCHAR },
            { "returningReturnedDate", Types.TIMESTAMP },
            { "returningNote", Types.VARCHAR },
            { "duplicatedRmaRequestId", Types.BIGINT },
            { "deniedDate", Types.TIMESTAMP },
            { "deniedNote", Types.VARCHAR },
            { "replacedDate", Types.TIMESTAMP },
            { "replacedNote", Types.VARCHAR },
            { "replacedNumber", Types.VARCHAR },
            { "replacedOldDeviceId", Types.BIGINT },
            { "replacedOldDeviceExtId", Types.BIGINT },
            { "replacedNewDeviceId", Types.BIGINT },
            { "replacedNewDeviceExtId", Types.BIGINT },
            { "oldStatus", Types.INTEGER },
            { "status", Types.INTEGER },
            { "statusByUserId", Types.BIGINT },
            { "statusDate", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table tms_RmaRequestDevice (rmaRequestId LONG not null,deviceId LONG not null,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,originalSerialNumber VARCHAR(75) null,faultyDate DATE null,faultyNote VARCHAR(75) null,action VARCHAR(75) null,partnerId LONG,partnerInCharge VARCHAR(75) null,partnerEmail VARCHAR(75) null,partnerPhone VARCHAR(75) null,partnerAddress VARCHAR(75) null,sendingEstReturnDate DATE null,sendingReturnedDate DATE null,sendingAssignedDate DATE null,sendingNote VARCHAR(75) null,receivingReturnedDate DATE null,receivingNote VARCHAR(75) null,returningReturnedDate DATE null,returningNote VARCHAR(75) null,duplicatedRmaRequestId LONG,deniedDate DATE null,deniedNote VARCHAR(75) null,replacedDate DATE null,replacedNote VARCHAR(75) null,replacedNumber VARCHAR(75) null,replacedOldDeviceId LONG,replacedOldDeviceExtId LONG,replacedNewDeviceId LONG,replacedNewDeviceExtId LONG,oldStatus INTEGER,status INTEGER,statusByUserId LONG,statusDate DATE null,primary key (rmaRequestId, deviceId))";
    public static final String TABLE_SQL_DROP = "drop table tms_RmaRequestDevice";
    public static final String ORDER_BY_JPQL = " ORDER BY rmaRequestDevice.id.rmaRequestId ASC, rmaRequestDevice.id.deviceId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tms_RmaRequestDevice.rmaRequestId ASC, tms_RmaRequestDevice.deviceId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.dasannetworks.vn.sb.model.RmaRequestDevice"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.dasannetworks.vn.sb.model.RmaRequestDevice"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.dasannetworks.vn.sb.model.RmaRequestDevice"),
            true);
    public static long DEVICEID_COLUMN_BITMASK = 1L;
    public static long PARTNERID_COLUMN_BITMASK = 2L;
    public static long REPLACEDNEWDEVICEEXTID_COLUMN_BITMASK = 4L;
    public static long REPLACEDNEWDEVICEID_COLUMN_BITMASK = 8L;
    public static long REPLACEDNUMBER_COLUMN_BITMASK = 16L;
    public static long REPLACEDOLDDEVICEEXTID_COLUMN_BITMASK = 32L;
    public static long REPLACEDOLDDEVICEID_COLUMN_BITMASK = 64L;
    public static long RMAREQUESTID_COLUMN_BITMASK = 128L;
    public static long STATUS_COLUMN_BITMASK = 256L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.dasannetworks.vn.sb.model.RmaRequestDevice"));
    private static ClassLoader _classLoader = RmaRequestDevice.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            RmaRequestDevice.class
        };
    private long _rmaRequestId;
    private long _originalRmaRequestId;
    private boolean _setOriginalRmaRequestId;
    private long _deviceId;
    private long _originalDeviceId;
    private boolean _setOriginalDeviceId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private String _originalSerialNumber;
    private Date _faultyDate;
    private String _faultyNote;
    private String _action;
    private Long _partnerId;
    private Long _originalPartnerId;
    private boolean _setOriginalPartnerId;
    private String _partnerInCharge;
    private String _partnerEmail;
    private String _partnerPhone;
    private String _partnerAddress;
    private Date _sendingEstReturnDate;
    private Date _sendingReturnedDate;
    private Date _sendingAssignedDate;
    private String _sendingNote;
    private Date _receivingReturnedDate;
    private String _receivingNote;
    private Date _returningReturnedDate;
    private String _returningNote;
    private Long _duplicatedRmaRequestId;
    private Date _deniedDate;
    private String _deniedNote;
    private Date _replacedDate;
    private String _replacedNote;
    private String _replacedNumber;
    private String _originalReplacedNumber;
    private Long _replacedOldDeviceId;
    private Long _originalReplacedOldDeviceId;
    private boolean _setOriginalReplacedOldDeviceId;
    private Long _replacedOldDeviceExtId;
    private Long _originalReplacedOldDeviceExtId;
    private boolean _setOriginalReplacedOldDeviceExtId;
    private Long _replacedNewDeviceId;
    private Long _originalReplacedNewDeviceId;
    private boolean _setOriginalReplacedNewDeviceId;
    private Long _replacedNewDeviceExtId;
    private Long _originalReplacedNewDeviceExtId;
    private boolean _setOriginalReplacedNewDeviceExtId;
    private int _oldStatus;
    private int _status;
    private int _originalStatus;
    private boolean _setOriginalStatus;
    private long _statusByUserId;
    private String _statusByUserUuid;
    private Date _statusDate;
    private long _columnBitmask;
    private RmaRequestDevice _escapedModel;

    public RmaRequestDeviceModelImpl() {
    }

    @Override
    public RmaRequestDevicePK getPrimaryKey() {
        return new RmaRequestDevicePK(_rmaRequestId, _deviceId);
    }

    @Override
    public void setPrimaryKey(RmaRequestDevicePK primaryKey) {
        setRmaRequestId(primaryKey.rmaRequestId);
        setDeviceId(primaryKey.deviceId);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new RmaRequestDevicePK(_rmaRequestId, _deviceId);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((RmaRequestDevicePK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return RmaRequestDevice.class;
    }

    @Override
    public String getModelClassName() {
        return RmaRequestDevice.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("rmaRequestId", getRmaRequestId());
        attributes.put("deviceId", getDeviceId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("originalSerialNumber", getOriginalSerialNumber());
        attributes.put("faultyDate", getFaultyDate());
        attributes.put("faultyNote", getFaultyNote());
        attributes.put("action", getAction());
        attributes.put("partnerId", getPartnerId());
        attributes.put("partnerInCharge", getPartnerInCharge());
        attributes.put("partnerEmail", getPartnerEmail());
        attributes.put("partnerPhone", getPartnerPhone());
        attributes.put("partnerAddress", getPartnerAddress());
        attributes.put("sendingEstReturnDate", getSendingEstReturnDate());
        attributes.put("sendingReturnedDate", getSendingReturnedDate());
        attributes.put("sendingAssignedDate", getSendingAssignedDate());
        attributes.put("sendingNote", getSendingNote());
        attributes.put("receivingReturnedDate", getReceivingReturnedDate());
        attributes.put("receivingNote", getReceivingNote());
        attributes.put("returningReturnedDate", getReturningReturnedDate());
        attributes.put("returningNote", getReturningNote());
        attributes.put("duplicatedRmaRequestId", getDuplicatedRmaRequestId());
        attributes.put("deniedDate", getDeniedDate());
        attributes.put("deniedNote", getDeniedNote());
        attributes.put("replacedDate", getReplacedDate());
        attributes.put("replacedNote", getReplacedNote());
        attributes.put("replacedNumber", getReplacedNumber());
        attributes.put("replacedOldDeviceId", getReplacedOldDeviceId());
        attributes.put("replacedOldDeviceExtId", getReplacedOldDeviceExtId());
        attributes.put("replacedNewDeviceId", getReplacedNewDeviceId());
        attributes.put("replacedNewDeviceExtId", getReplacedNewDeviceExtId());
        attributes.put("oldStatus", getOldStatus());
        attributes.put("status", getStatus());
        attributes.put("statusByUserId", getStatusByUserId());
        attributes.put("statusDate", getStatusDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long rmaRequestId = (Long) attributes.get("rmaRequestId");

        if (rmaRequestId != null) {
            setRmaRequestId(rmaRequestId);
        }

        Long deviceId = (Long) attributes.get("deviceId");

        if (deviceId != null) {
            setDeviceId(deviceId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String originalSerialNumber = (String) attributes.get(
                "originalSerialNumber");

        if (originalSerialNumber != null) {
            setOriginalSerialNumber(originalSerialNumber);
        }

        Date faultyDate = (Date) attributes.get("faultyDate");

        if (faultyDate != null) {
            setFaultyDate(faultyDate);
        }

        String faultyNote = (String) attributes.get("faultyNote");

        if (faultyNote != null) {
            setFaultyNote(faultyNote);
        }

        String action = (String) attributes.get("action");

        if (action != null) {
            setAction(action);
        }

        Long partnerId = (Long) attributes.get("partnerId");

        if (partnerId != null) {
            setPartnerId(partnerId);
        }

        String partnerInCharge = (String) attributes.get("partnerInCharge");

        if (partnerInCharge != null) {
            setPartnerInCharge(partnerInCharge);
        }

        String partnerEmail = (String) attributes.get("partnerEmail");

        if (partnerEmail != null) {
            setPartnerEmail(partnerEmail);
        }

        String partnerPhone = (String) attributes.get("partnerPhone");

        if (partnerPhone != null) {
            setPartnerPhone(partnerPhone);
        }

        String partnerAddress = (String) attributes.get("partnerAddress");

        if (partnerAddress != null) {
            setPartnerAddress(partnerAddress);
        }

        Date sendingEstReturnDate = (Date) attributes.get(
                "sendingEstReturnDate");

        if (sendingEstReturnDate != null) {
            setSendingEstReturnDate(sendingEstReturnDate);
        }

        Date sendingReturnedDate = (Date) attributes.get("sendingReturnedDate");

        if (sendingReturnedDate != null) {
            setSendingReturnedDate(sendingReturnedDate);
        }

        Date sendingAssignedDate = (Date) attributes.get("sendingAssignedDate");

        if (sendingAssignedDate != null) {
            setSendingAssignedDate(sendingAssignedDate);
        }

        String sendingNote = (String) attributes.get("sendingNote");

        if (sendingNote != null) {
            setSendingNote(sendingNote);
        }

        Date receivingReturnedDate = (Date) attributes.get(
                "receivingReturnedDate");

        if (receivingReturnedDate != null) {
            setReceivingReturnedDate(receivingReturnedDate);
        }

        String receivingNote = (String) attributes.get("receivingNote");

        if (receivingNote != null) {
            setReceivingNote(receivingNote);
        }

        Date returningReturnedDate = (Date) attributes.get(
                "returningReturnedDate");

        if (returningReturnedDate != null) {
            setReturningReturnedDate(returningReturnedDate);
        }

        String returningNote = (String) attributes.get("returningNote");

        if (returningNote != null) {
            setReturningNote(returningNote);
        }

        Long duplicatedRmaRequestId = (Long) attributes.get(
                "duplicatedRmaRequestId");

        if (duplicatedRmaRequestId != null) {
            setDuplicatedRmaRequestId(duplicatedRmaRequestId);
        }

        Date deniedDate = (Date) attributes.get("deniedDate");

        if (deniedDate != null) {
            setDeniedDate(deniedDate);
        }

        String deniedNote = (String) attributes.get("deniedNote");

        if (deniedNote != null) {
            setDeniedNote(deniedNote);
        }

        Date replacedDate = (Date) attributes.get("replacedDate");

        if (replacedDate != null) {
            setReplacedDate(replacedDate);
        }

        String replacedNote = (String) attributes.get("replacedNote");

        if (replacedNote != null) {
            setReplacedNote(replacedNote);
        }

        String replacedNumber = (String) attributes.get("replacedNumber");

        if (replacedNumber != null) {
            setReplacedNumber(replacedNumber);
        }

        Long replacedOldDeviceId = (Long) attributes.get("replacedOldDeviceId");

        if (replacedOldDeviceId != null) {
            setReplacedOldDeviceId(replacedOldDeviceId);
        }

        Long replacedOldDeviceExtId = (Long) attributes.get(
                "replacedOldDeviceExtId");

        if (replacedOldDeviceExtId != null) {
            setReplacedOldDeviceExtId(replacedOldDeviceExtId);
        }

        Long replacedNewDeviceId = (Long) attributes.get("replacedNewDeviceId");

        if (replacedNewDeviceId != null) {
            setReplacedNewDeviceId(replacedNewDeviceId);
        }

        Long replacedNewDeviceExtId = (Long) attributes.get(
                "replacedNewDeviceExtId");

        if (replacedNewDeviceExtId != null) {
            setReplacedNewDeviceExtId(replacedNewDeviceExtId);
        }

        Integer oldStatus = (Integer) attributes.get("oldStatus");

        if (oldStatus != null) {
            setOldStatus(oldStatus);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        Long statusByUserId = (Long) attributes.get("statusByUserId");

        if (statusByUserId != null) {
            setStatusByUserId(statusByUserId);
        }

        Date statusDate = (Date) attributes.get("statusDate");

        if (statusDate != null) {
            setStatusDate(statusDate);
        }
    }

    @Override
    public long getRmaRequestId() {
        return _rmaRequestId;
    }

    @Override
    public void setRmaRequestId(long rmaRequestId) {
        _columnBitmask |= RMAREQUESTID_COLUMN_BITMASK;

        if (!_setOriginalRmaRequestId) {
            _setOriginalRmaRequestId = true;

            _originalRmaRequestId = _rmaRequestId;
        }

        _rmaRequestId = rmaRequestId;
    }

    public long getOriginalRmaRequestId() {
        return _originalRmaRequestId;
    }

    @Override
    public long getDeviceId() {
        return _deviceId;
    }

    @Override
    public void setDeviceId(long deviceId) {
        _columnBitmask |= DEVICEID_COLUMN_BITMASK;

        if (!_setOriginalDeviceId) {
            _setOriginalDeviceId = true;

            _originalDeviceId = _deviceId;
        }

        _deviceId = deviceId;
    }

    public long getOriginalDeviceId() {
        return _originalDeviceId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getOriginalSerialNumber() {
        return _originalSerialNumber;
    }

    @Override
    public void setOriginalSerialNumber(String originalSerialNumber) {
        _originalSerialNumber = originalSerialNumber;
    }

    @Override
    public Date getFaultyDate() {
        return _faultyDate;
    }

    @Override
    public void setFaultyDate(Date faultyDate) {
        _faultyDate = faultyDate;
    }

    @Override
    public String getFaultyNote() {
        if (_faultyNote == null) {
            return StringPool.BLANK;
        } else {
            return _faultyNote;
        }
    }

    @Override
    public void setFaultyNote(String faultyNote) {
        _faultyNote = faultyNote;
    }

    @Override
    public String getAction() {
        if (_action == null) {
            return StringPool.BLANK;
        } else {
            return _action;
        }
    }

    @Override
    public void setAction(String action) {
        _action = action;
    }

    @Override
    public Long getPartnerId() {
        return _partnerId;
    }

    @Override
    public void setPartnerId(Long partnerId) {
        _columnBitmask |= PARTNERID_COLUMN_BITMASK;

        if (!_setOriginalPartnerId) {
            _setOriginalPartnerId = true;

            _originalPartnerId = _partnerId;
        }

        _partnerId = partnerId;
    }

    public Long getOriginalPartnerId() {
        return _originalPartnerId;
    }

    @Override
    public String getPartnerInCharge() {
        if (_partnerInCharge == null) {
            return StringPool.BLANK;
        } else {
            return _partnerInCharge;
        }
    }

    @Override
    public void setPartnerInCharge(String partnerInCharge) {
        _partnerInCharge = partnerInCharge;
    }

    @Override
    public String getPartnerEmail() {
        if (_partnerEmail == null) {
            return StringPool.BLANK;
        } else {
            return _partnerEmail;
        }
    }

    @Override
    public void setPartnerEmail(String partnerEmail) {
        _partnerEmail = partnerEmail;
    }

    @Override
    public String getPartnerPhone() {
        if (_partnerPhone == null) {
            return StringPool.BLANK;
        } else {
            return _partnerPhone;
        }
    }

    @Override
    public void setPartnerPhone(String partnerPhone) {
        _partnerPhone = partnerPhone;
    }

    @Override
    public String getPartnerAddress() {
        if (_partnerAddress == null) {
            return StringPool.BLANK;
        } else {
            return _partnerAddress;
        }
    }

    @Override
    public void setPartnerAddress(String partnerAddress) {
        _partnerAddress = partnerAddress;
    }

    @Override
    public Date getSendingEstReturnDate() {
        return _sendingEstReturnDate;
    }

    @Override
    public void setSendingEstReturnDate(Date sendingEstReturnDate) {
        _sendingEstReturnDate = sendingEstReturnDate;
    }

    @Override
    public Date getSendingReturnedDate() {
        return _sendingReturnedDate;
    }

    @Override
    public void setSendingReturnedDate(Date sendingReturnedDate) {
        _sendingReturnedDate = sendingReturnedDate;
    }

    @Override
    public Date getSendingAssignedDate() {
        return _sendingAssignedDate;
    }

    @Override
    public void setSendingAssignedDate(Date sendingAssignedDate) {
        _sendingAssignedDate = sendingAssignedDate;
    }

    @Override
    public String getSendingNote() {
        if (_sendingNote == null) {
            return StringPool.BLANK;
        } else {
            return _sendingNote;
        }
    }

    @Override
    public void setSendingNote(String sendingNote) {
        _sendingNote = sendingNote;
    }

    @Override
    public Date getReceivingReturnedDate() {
        return _receivingReturnedDate;
    }

    @Override
    public void setReceivingReturnedDate(Date receivingReturnedDate) {
        _receivingReturnedDate = receivingReturnedDate;
    }

    @Override
    public String getReceivingNote() {
        if (_receivingNote == null) {
            return StringPool.BLANK;
        } else {
            return _receivingNote;
        }
    }

    @Override
    public void setReceivingNote(String receivingNote) {
        _receivingNote = receivingNote;
    }

    @Override
    public Date getReturningReturnedDate() {
        return _returningReturnedDate;
    }

    @Override
    public void setReturningReturnedDate(Date returningReturnedDate) {
        _returningReturnedDate = returningReturnedDate;
    }

    @Override
    public String getReturningNote() {
        if (_returningNote == null) {
            return StringPool.BLANK;
        } else {
            return _returningNote;
        }
    }

    @Override
    public void setReturningNote(String returningNote) {
        _returningNote = returningNote;
    }

    @Override
    public Long getDuplicatedRmaRequestId() {
        return _duplicatedRmaRequestId;
    }

    @Override
    public void setDuplicatedRmaRequestId(Long duplicatedRmaRequestId) {
        _duplicatedRmaRequestId = duplicatedRmaRequestId;
    }

    @Override
    public Date getDeniedDate() {
        return _deniedDate;
    }

    @Override
    public void setDeniedDate(Date deniedDate) {
        _deniedDate = deniedDate;
    }

    @Override
    public String getDeniedNote() {
        if (_deniedNote == null) {
            return StringPool.BLANK;
        } else {
            return _deniedNote;
        }
    }

    @Override
    public void setDeniedNote(String deniedNote) {
        _deniedNote = deniedNote;
    }

    @Override
    public Date getReplacedDate() {
        return _replacedDate;
    }

    @Override
    public void setReplacedDate(Date replacedDate) {
        _replacedDate = replacedDate;
    }

    @Override
    public String getReplacedNote() {
        if (_replacedNote == null) {
            return StringPool.BLANK;
        } else {
            return _replacedNote;
        }
    }

    @Override
    public void setReplacedNote(String replacedNote) {
        _replacedNote = replacedNote;
    }

    @Override
    public String getReplacedNumber() {
        return _replacedNumber;
    }

    @Override
    public void setReplacedNumber(String replacedNumber) {
        _columnBitmask |= REPLACEDNUMBER_COLUMN_BITMASK;

        if (_originalReplacedNumber == null) {
            _originalReplacedNumber = _replacedNumber;
        }

        _replacedNumber = replacedNumber;
    }

    public String getOriginalReplacedNumber() {
        return _originalReplacedNumber;
    }

    @Override
    public Long getReplacedOldDeviceId() {
        return _replacedOldDeviceId;
    }

    @Override
    public void setReplacedOldDeviceId(Long replacedOldDeviceId) {
        _columnBitmask |= REPLACEDOLDDEVICEID_COLUMN_BITMASK;

        if (!_setOriginalReplacedOldDeviceId) {
            _setOriginalReplacedOldDeviceId = true;

            _originalReplacedOldDeviceId = _replacedOldDeviceId;
        }

        _replacedOldDeviceId = replacedOldDeviceId;
    }

    public Long getOriginalReplacedOldDeviceId() {
        return _originalReplacedOldDeviceId;
    }

    @Override
    public Long getReplacedOldDeviceExtId() {
        return _replacedOldDeviceExtId;
    }

    @Override
    public void setReplacedOldDeviceExtId(Long replacedOldDeviceExtId) {
        _columnBitmask |= REPLACEDOLDDEVICEEXTID_COLUMN_BITMASK;

        if (!_setOriginalReplacedOldDeviceExtId) {
            _setOriginalReplacedOldDeviceExtId = true;

            _originalReplacedOldDeviceExtId = _replacedOldDeviceExtId;
        }

        _replacedOldDeviceExtId = replacedOldDeviceExtId;
    }

    public Long getOriginalReplacedOldDeviceExtId() {
        return _originalReplacedOldDeviceExtId;
    }

    @Override
    public Long getReplacedNewDeviceId() {
        return _replacedNewDeviceId;
    }

    @Override
    public void setReplacedNewDeviceId(Long replacedNewDeviceId) {
        _columnBitmask |= REPLACEDNEWDEVICEID_COLUMN_BITMASK;

        if (!_setOriginalReplacedNewDeviceId) {
            _setOriginalReplacedNewDeviceId = true;

            _originalReplacedNewDeviceId = _replacedNewDeviceId;
        }

        _replacedNewDeviceId = replacedNewDeviceId;
    }

    public Long getOriginalReplacedNewDeviceId() {
        return _originalReplacedNewDeviceId;
    }

    @Override
    public Long getReplacedNewDeviceExtId() {
        return _replacedNewDeviceExtId;
    }

    @Override
    public void setReplacedNewDeviceExtId(Long replacedNewDeviceExtId) {
        _columnBitmask |= REPLACEDNEWDEVICEEXTID_COLUMN_BITMASK;

        if (!_setOriginalReplacedNewDeviceExtId) {
            _setOriginalReplacedNewDeviceExtId = true;

            _originalReplacedNewDeviceExtId = _replacedNewDeviceExtId;
        }

        _replacedNewDeviceExtId = replacedNewDeviceExtId;
    }

    public Long getOriginalReplacedNewDeviceExtId() {
        return _originalReplacedNewDeviceExtId;
    }

    @Override
    public int getOldStatus() {
        return _oldStatus;
    }

    @Override
    public void setOldStatus(int oldStatus) {
        _oldStatus = oldStatus;
    }

    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _columnBitmask |= STATUS_COLUMN_BITMASK;

        if (!_setOriginalStatus) {
            _setOriginalStatus = true;

            _originalStatus = _status;
        }

        _status = status;
    }

    public int getOriginalStatus() {
        return _originalStatus;
    }

    @Override
    public long getStatusByUserId() {
        return _statusByUserId;
    }

    @Override
    public void setStatusByUserId(long statusByUserId) {
        _statusByUserId = statusByUserId;
    }

    @Override
    public String getStatusByUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getStatusByUserId(), "uuid",
            _statusByUserUuid);
    }

    @Override
    public void setStatusByUserUuid(String statusByUserUuid) {
        _statusByUserUuid = statusByUserUuid;
    }

    @Override
    public Date getStatusDate() {
        return _statusDate;
    }

    @Override
    public void setStatusDate(Date statusDate) {
        _statusDate = statusDate;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public RmaRequestDevice toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (RmaRequestDevice) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RmaRequestDeviceImpl rmaRequestDeviceImpl = new RmaRequestDeviceImpl();

        rmaRequestDeviceImpl.setRmaRequestId(getRmaRequestId());
        rmaRequestDeviceImpl.setDeviceId(getDeviceId());
        rmaRequestDeviceImpl.setCompanyId(getCompanyId());
        rmaRequestDeviceImpl.setUserId(getUserId());
        rmaRequestDeviceImpl.setUserName(getUserName());
        rmaRequestDeviceImpl.setCreateDate(getCreateDate());
        rmaRequestDeviceImpl.setModifiedDate(getModifiedDate());
        rmaRequestDeviceImpl.setOriginalSerialNumber(getOriginalSerialNumber());
        rmaRequestDeviceImpl.setFaultyDate(getFaultyDate());
        rmaRequestDeviceImpl.setFaultyNote(getFaultyNote());
        rmaRequestDeviceImpl.setAction(getAction());
        rmaRequestDeviceImpl.setPartnerId(getPartnerId());
        rmaRequestDeviceImpl.setPartnerInCharge(getPartnerInCharge());
        rmaRequestDeviceImpl.setPartnerEmail(getPartnerEmail());
        rmaRequestDeviceImpl.setPartnerPhone(getPartnerPhone());
        rmaRequestDeviceImpl.setPartnerAddress(getPartnerAddress());
        rmaRequestDeviceImpl.setSendingEstReturnDate(getSendingEstReturnDate());
        rmaRequestDeviceImpl.setSendingReturnedDate(getSendingReturnedDate());
        rmaRequestDeviceImpl.setSendingAssignedDate(getSendingAssignedDate());
        rmaRequestDeviceImpl.setSendingNote(getSendingNote());
        rmaRequestDeviceImpl.setReceivingReturnedDate(getReceivingReturnedDate());
        rmaRequestDeviceImpl.setReceivingNote(getReceivingNote());
        rmaRequestDeviceImpl.setReturningReturnedDate(getReturningReturnedDate());
        rmaRequestDeviceImpl.setReturningNote(getReturningNote());
        rmaRequestDeviceImpl.setDuplicatedRmaRequestId(getDuplicatedRmaRequestId());
        rmaRequestDeviceImpl.setDeniedDate(getDeniedDate());
        rmaRequestDeviceImpl.setDeniedNote(getDeniedNote());
        rmaRequestDeviceImpl.setReplacedDate(getReplacedDate());
        rmaRequestDeviceImpl.setReplacedNote(getReplacedNote());
        rmaRequestDeviceImpl.setReplacedNumber(getReplacedNumber());
        rmaRequestDeviceImpl.setReplacedOldDeviceId(getReplacedOldDeviceId());
        rmaRequestDeviceImpl.setReplacedOldDeviceExtId(getReplacedOldDeviceExtId());
        rmaRequestDeviceImpl.setReplacedNewDeviceId(getReplacedNewDeviceId());
        rmaRequestDeviceImpl.setReplacedNewDeviceExtId(getReplacedNewDeviceExtId());
        rmaRequestDeviceImpl.setOldStatus(getOldStatus());
        rmaRequestDeviceImpl.setStatus(getStatus());
        rmaRequestDeviceImpl.setStatusByUserId(getStatusByUserId());
        rmaRequestDeviceImpl.setStatusDate(getStatusDate());

        rmaRequestDeviceImpl.resetOriginalValues();

        return rmaRequestDeviceImpl;
    }

    @Override
    public int compareTo(RmaRequestDevice rmaRequestDevice) {
        RmaRequestDevicePK primaryKey = rmaRequestDevice.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof RmaRequestDevice)) {
            return false;
        }

        RmaRequestDevice rmaRequestDevice = (RmaRequestDevice) obj;

        RmaRequestDevicePK primaryKey = rmaRequestDevice.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
        RmaRequestDeviceModelImpl rmaRequestDeviceModelImpl = this;

        rmaRequestDeviceModelImpl._originalRmaRequestId = rmaRequestDeviceModelImpl._rmaRequestId;

        rmaRequestDeviceModelImpl._setOriginalRmaRequestId = false;

        rmaRequestDeviceModelImpl._originalDeviceId = rmaRequestDeviceModelImpl._deviceId;

        rmaRequestDeviceModelImpl._setOriginalDeviceId = false;

        rmaRequestDeviceModelImpl._originalPartnerId = rmaRequestDeviceModelImpl._partnerId;

        rmaRequestDeviceModelImpl._setOriginalPartnerId = false;

        rmaRequestDeviceModelImpl._originalReplacedNumber = rmaRequestDeviceModelImpl._replacedNumber;

        rmaRequestDeviceModelImpl._originalReplacedOldDeviceId = rmaRequestDeviceModelImpl._replacedOldDeviceId;

        rmaRequestDeviceModelImpl._setOriginalReplacedOldDeviceId = false;

        rmaRequestDeviceModelImpl._originalReplacedOldDeviceExtId = rmaRequestDeviceModelImpl._replacedOldDeviceExtId;

        rmaRequestDeviceModelImpl._setOriginalReplacedOldDeviceExtId = false;

        rmaRequestDeviceModelImpl._originalReplacedNewDeviceId = rmaRequestDeviceModelImpl._replacedNewDeviceId;

        rmaRequestDeviceModelImpl._setOriginalReplacedNewDeviceId = false;

        rmaRequestDeviceModelImpl._originalReplacedNewDeviceExtId = rmaRequestDeviceModelImpl._replacedNewDeviceExtId;

        rmaRequestDeviceModelImpl._setOriginalReplacedNewDeviceExtId = false;

        rmaRequestDeviceModelImpl._originalStatus = rmaRequestDeviceModelImpl._status;

        rmaRequestDeviceModelImpl._setOriginalStatus = false;

        rmaRequestDeviceModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<RmaRequestDevice> toCacheModel() {
        RmaRequestDeviceCacheModel rmaRequestDeviceCacheModel = new RmaRequestDeviceCacheModel();

        rmaRequestDeviceCacheModel.rmaRequestId = getRmaRequestId();

        rmaRequestDeviceCacheModel.deviceId = getDeviceId();

        rmaRequestDeviceCacheModel.companyId = getCompanyId();

        rmaRequestDeviceCacheModel.userId = getUserId();

        rmaRequestDeviceCacheModel.userName = getUserName();

        String userName = rmaRequestDeviceCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            rmaRequestDeviceCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            rmaRequestDeviceCacheModel.createDate = createDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            rmaRequestDeviceCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        rmaRequestDeviceCacheModel.originalSerialNumber = getOriginalSerialNumber();

        String originalSerialNumber = rmaRequestDeviceCacheModel.originalSerialNumber;

        if ((originalSerialNumber != null) &&
                (originalSerialNumber.length() == 0)) {
            rmaRequestDeviceCacheModel.originalSerialNumber = null;
        }

        Date faultyDate = getFaultyDate();

        if (faultyDate != null) {
            rmaRequestDeviceCacheModel.faultyDate = faultyDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.faultyDate = Long.MIN_VALUE;
        }

        rmaRequestDeviceCacheModel.faultyNote = getFaultyNote();

        String faultyNote = rmaRequestDeviceCacheModel.faultyNote;

        if ((faultyNote != null) && (faultyNote.length() == 0)) {
            rmaRequestDeviceCacheModel.faultyNote = null;
        }

        rmaRequestDeviceCacheModel.action = getAction();

        String action = rmaRequestDeviceCacheModel.action;

        if ((action != null) && (action.length() == 0)) {
            rmaRequestDeviceCacheModel.action = null;
        }

        rmaRequestDeviceCacheModel.partnerId = getPartnerId();

        rmaRequestDeviceCacheModel.partnerInCharge = getPartnerInCharge();

        String partnerInCharge = rmaRequestDeviceCacheModel.partnerInCharge;

        if ((partnerInCharge != null) && (partnerInCharge.length() == 0)) {
            rmaRequestDeviceCacheModel.partnerInCharge = null;
        }

        rmaRequestDeviceCacheModel.partnerEmail = getPartnerEmail();

        String partnerEmail = rmaRequestDeviceCacheModel.partnerEmail;

        if ((partnerEmail != null) && (partnerEmail.length() == 0)) {
            rmaRequestDeviceCacheModel.partnerEmail = null;
        }

        rmaRequestDeviceCacheModel.partnerPhone = getPartnerPhone();

        String partnerPhone = rmaRequestDeviceCacheModel.partnerPhone;

        if ((partnerPhone != null) && (partnerPhone.length() == 0)) {
            rmaRequestDeviceCacheModel.partnerPhone = null;
        }

        rmaRequestDeviceCacheModel.partnerAddress = getPartnerAddress();

        String partnerAddress = rmaRequestDeviceCacheModel.partnerAddress;

        if ((partnerAddress != null) && (partnerAddress.length() == 0)) {
            rmaRequestDeviceCacheModel.partnerAddress = null;
        }

        Date sendingEstReturnDate = getSendingEstReturnDate();

        if (sendingEstReturnDate != null) {
            rmaRequestDeviceCacheModel.sendingEstReturnDate = sendingEstReturnDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.sendingEstReturnDate = Long.MIN_VALUE;
        }

        Date sendingReturnedDate = getSendingReturnedDate();

        if (sendingReturnedDate != null) {
            rmaRequestDeviceCacheModel.sendingReturnedDate = sendingReturnedDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.sendingReturnedDate = Long.MIN_VALUE;
        }

        Date sendingAssignedDate = getSendingAssignedDate();

        if (sendingAssignedDate != null) {
            rmaRequestDeviceCacheModel.sendingAssignedDate = sendingAssignedDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.sendingAssignedDate = Long.MIN_VALUE;
        }

        rmaRequestDeviceCacheModel.sendingNote = getSendingNote();

        String sendingNote = rmaRequestDeviceCacheModel.sendingNote;

        if ((sendingNote != null) && (sendingNote.length() == 0)) {
            rmaRequestDeviceCacheModel.sendingNote = null;
        }

        Date receivingReturnedDate = getReceivingReturnedDate();

        if (receivingReturnedDate != null) {
            rmaRequestDeviceCacheModel.receivingReturnedDate = receivingReturnedDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.receivingReturnedDate = Long.MIN_VALUE;
        }

        rmaRequestDeviceCacheModel.receivingNote = getReceivingNote();

        String receivingNote = rmaRequestDeviceCacheModel.receivingNote;

        if ((receivingNote != null) && (receivingNote.length() == 0)) {
            rmaRequestDeviceCacheModel.receivingNote = null;
        }

        Date returningReturnedDate = getReturningReturnedDate();

        if (returningReturnedDate != null) {
            rmaRequestDeviceCacheModel.returningReturnedDate = returningReturnedDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.returningReturnedDate = Long.MIN_VALUE;
        }

        rmaRequestDeviceCacheModel.returningNote = getReturningNote();

        String returningNote = rmaRequestDeviceCacheModel.returningNote;

        if ((returningNote != null) && (returningNote.length() == 0)) {
            rmaRequestDeviceCacheModel.returningNote = null;
        }

        rmaRequestDeviceCacheModel.duplicatedRmaRequestId = getDuplicatedRmaRequestId();

        Date deniedDate = getDeniedDate();

        if (deniedDate != null) {
            rmaRequestDeviceCacheModel.deniedDate = deniedDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.deniedDate = Long.MIN_VALUE;
        }

        rmaRequestDeviceCacheModel.deniedNote = getDeniedNote();

        String deniedNote = rmaRequestDeviceCacheModel.deniedNote;

        if ((deniedNote != null) && (deniedNote.length() == 0)) {
            rmaRequestDeviceCacheModel.deniedNote = null;
        }

        Date replacedDate = getReplacedDate();

        if (replacedDate != null) {
            rmaRequestDeviceCacheModel.replacedDate = replacedDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.replacedDate = Long.MIN_VALUE;
        }

        rmaRequestDeviceCacheModel.replacedNote = getReplacedNote();

        String replacedNote = rmaRequestDeviceCacheModel.replacedNote;

        if ((replacedNote != null) && (replacedNote.length() == 0)) {
            rmaRequestDeviceCacheModel.replacedNote = null;
        }

        rmaRequestDeviceCacheModel.replacedNumber = getReplacedNumber();

        String replacedNumber = rmaRequestDeviceCacheModel.replacedNumber;

        if ((replacedNumber != null) && (replacedNumber.length() == 0)) {
            rmaRequestDeviceCacheModel.replacedNumber = null;
        }

        rmaRequestDeviceCacheModel.replacedOldDeviceId = getReplacedOldDeviceId();

        rmaRequestDeviceCacheModel.replacedOldDeviceExtId = getReplacedOldDeviceExtId();

        rmaRequestDeviceCacheModel.replacedNewDeviceId = getReplacedNewDeviceId();

        rmaRequestDeviceCacheModel.replacedNewDeviceExtId = getReplacedNewDeviceExtId();

        rmaRequestDeviceCacheModel.oldStatus = getOldStatus();

        rmaRequestDeviceCacheModel.status = getStatus();

        rmaRequestDeviceCacheModel.statusByUserId = getStatusByUserId();

        Date statusDate = getStatusDate();

        if (statusDate != null) {
            rmaRequestDeviceCacheModel.statusDate = statusDate.getTime();
        } else {
            rmaRequestDeviceCacheModel.statusDate = Long.MIN_VALUE;
        }

        return rmaRequestDeviceCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(77);

        sb.append("{rmaRequestId=");
        sb.append(getRmaRequestId());
        sb.append(", deviceId=");
        sb.append(getDeviceId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", originalSerialNumber=");
        sb.append(getOriginalSerialNumber());
        sb.append(", faultyDate=");
        sb.append(getFaultyDate());
        sb.append(", faultyNote=");
        sb.append(getFaultyNote());
        sb.append(", action=");
        sb.append(getAction());
        sb.append(", partnerId=");
        sb.append(getPartnerId());
        sb.append(", partnerInCharge=");
        sb.append(getPartnerInCharge());
        sb.append(", partnerEmail=");
        sb.append(getPartnerEmail());
        sb.append(", partnerPhone=");
        sb.append(getPartnerPhone());
        sb.append(", partnerAddress=");
        sb.append(getPartnerAddress());
        sb.append(", sendingEstReturnDate=");
        sb.append(getSendingEstReturnDate());
        sb.append(", sendingReturnedDate=");
        sb.append(getSendingReturnedDate());
        sb.append(", sendingAssignedDate=");
        sb.append(getSendingAssignedDate());
        sb.append(", sendingNote=");
        sb.append(getSendingNote());
        sb.append(", receivingReturnedDate=");
        sb.append(getReceivingReturnedDate());
        sb.append(", receivingNote=");
        sb.append(getReceivingNote());
        sb.append(", returningReturnedDate=");
        sb.append(getReturningReturnedDate());
        sb.append(", returningNote=");
        sb.append(getReturningNote());
        sb.append(", duplicatedRmaRequestId=");
        sb.append(getDuplicatedRmaRequestId());
        sb.append(", deniedDate=");
        sb.append(getDeniedDate());
        sb.append(", deniedNote=");
        sb.append(getDeniedNote());
        sb.append(", replacedDate=");
        sb.append(getReplacedDate());
        sb.append(", replacedNote=");
        sb.append(getReplacedNote());
        sb.append(", replacedNumber=");
        sb.append(getReplacedNumber());
        sb.append(", replacedOldDeviceId=");
        sb.append(getReplacedOldDeviceId());
        sb.append(", replacedOldDeviceExtId=");
        sb.append(getReplacedOldDeviceExtId());
        sb.append(", replacedNewDeviceId=");
        sb.append(getReplacedNewDeviceId());
        sb.append(", replacedNewDeviceExtId=");
        sb.append(getReplacedNewDeviceExtId());
        sb.append(", oldStatus=");
        sb.append(getOldStatus());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", statusByUserId=");
        sb.append(getStatusByUserId());
        sb.append(", statusDate=");
        sb.append(getStatusDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(118);

        sb.append("<model><model-name>");
        sb.append("com.dasannetworks.vn.sb.model.RmaRequestDevice");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>rmaRequestId</column-name><column-value><![CDATA[");
        sb.append(getRmaRequestId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deviceId</column-name><column-value><![CDATA[");
        sb.append(getDeviceId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>originalSerialNumber</column-name><column-value><![CDATA[");
        sb.append(getOriginalSerialNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>faultyDate</column-name><column-value><![CDATA[");
        sb.append(getFaultyDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>faultyNote</column-name><column-value><![CDATA[");
        sb.append(getFaultyNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>action</column-name><column-value><![CDATA[");
        sb.append(getAction());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerId</column-name><column-value><![CDATA[");
        sb.append(getPartnerId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerInCharge</column-name><column-value><![CDATA[");
        sb.append(getPartnerInCharge());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerEmail</column-name><column-value><![CDATA[");
        sb.append(getPartnerEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerPhone</column-name><column-value><![CDATA[");
        sb.append(getPartnerPhone());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerAddress</column-name><column-value><![CDATA[");
        sb.append(getPartnerAddress());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingEstReturnDate</column-name><column-value><![CDATA[");
        sb.append(getSendingEstReturnDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingReturnedDate</column-name><column-value><![CDATA[");
        sb.append(getSendingReturnedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingAssignedDate</column-name><column-value><![CDATA[");
        sb.append(getSendingAssignedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingNote</column-name><column-value><![CDATA[");
        sb.append(getSendingNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>receivingReturnedDate</column-name><column-value><![CDATA[");
        sb.append(getReceivingReturnedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>receivingNote</column-name><column-value><![CDATA[");
        sb.append(getReceivingNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>returningReturnedDate</column-name><column-value><![CDATA[");
        sb.append(getReturningReturnedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>returningNote</column-name><column-value><![CDATA[");
        sb.append(getReturningNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>duplicatedRmaRequestId</column-name><column-value><![CDATA[");
        sb.append(getDuplicatedRmaRequestId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deniedDate</column-name><column-value><![CDATA[");
        sb.append(getDeniedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deniedNote</column-name><column-value><![CDATA[");
        sb.append(getDeniedNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>replacedDate</column-name><column-value><![CDATA[");
        sb.append(getReplacedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>replacedNote</column-name><column-value><![CDATA[");
        sb.append(getReplacedNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>replacedNumber</column-name><column-value><![CDATA[");
        sb.append(getReplacedNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>replacedOldDeviceId</column-name><column-value><![CDATA[");
        sb.append(getReplacedOldDeviceId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>replacedOldDeviceExtId</column-name><column-value><![CDATA[");
        sb.append(getReplacedOldDeviceExtId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>replacedNewDeviceId</column-name><column-value><![CDATA[");
        sb.append(getReplacedNewDeviceId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>replacedNewDeviceExtId</column-name><column-value><![CDATA[");
        sb.append(getReplacedNewDeviceExtId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>oldStatus</column-name><column-value><![CDATA[");
        sb.append(getOldStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
        sb.append(getStatusByUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusDate</column-name><column-value><![CDATA[");
        sb.append(getStatusDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
