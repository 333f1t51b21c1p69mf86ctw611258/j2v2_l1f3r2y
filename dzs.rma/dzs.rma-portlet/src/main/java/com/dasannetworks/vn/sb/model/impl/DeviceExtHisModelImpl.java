package com.dasannetworks.vn.sb.model.impl;

import com.dasannetworks.vn.sb.model.DeviceExtHis;
import com.dasannetworks.vn.sb.model.DeviceExtHisModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DeviceExtHis service. Represents a row in the &quot;tms_DeviceExtHis&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dasannetworks.vn.sb.model.DeviceExtHisModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DeviceExtHisImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DeviceExtHisImpl
 * @see com.dasannetworks.vn.sb.model.DeviceExtHis
 * @see com.dasannetworks.vn.sb.model.DeviceExtHisModel
 * @generated
 */
public class DeviceExtHisModelImpl extends BaseModelImpl<DeviceExtHis>
    implements DeviceExtHisModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a device ext his model instance should use the {@link com.dasannetworks.vn.sb.model.DeviceExtHis} interface instead.
     */
    public static final String TABLE_NAME = "tms_DeviceExtHis";
    public static final Object[][] TABLE_COLUMNS = {
            { "deviceExtId", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "modelName", Types.VARCHAR },
            { "serialNumber", Types.VARCHAR },
            { "gponSerialNumber", Types.VARCHAR },
            { "boxSerialNumber", Types.VARCHAR },
            { "customerSerialNumber", Types.VARCHAR },
            { "manufacturerSerialNumber", Types.VARCHAR },
            { "hardwareRevision", Types.VARCHAR },
            { "softwareRevision", Types.VARCHAR },
            { "macAddress", Types.VARCHAR },
            { "partNumber", Types.VARCHAR },
            { "specification", Types.VARCHAR },
            { "factoryOut", Types.TIMESTAMP },
            { "status", Types.INTEGER },
            { "ostStatusChangedDate", Types.TIMESTAMP },
            { "deviceExtOrderId", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table tms_DeviceExtHis (deviceExtId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,modelName VARCHAR(75) null,serialNumber VARCHAR(75) null,gponSerialNumber VARCHAR(75) null,boxSerialNumber VARCHAR(75) null,customerSerialNumber VARCHAR(75) null,manufacturerSerialNumber VARCHAR(75) null,hardwareRevision VARCHAR(75) null,softwareRevision VARCHAR(75) null,macAddress VARCHAR(75) null,partNumber VARCHAR(75) null,specification VARCHAR(75) null,factoryOut DATE null,status INTEGER,ostStatusChangedDate DATE null,deviceExtOrderId LONG)";
    public static final String TABLE_SQL_DROP = "drop table tms_DeviceExtHis";
    public static final String ORDER_BY_JPQL = " ORDER BY deviceExtHis.deviceExtId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tms_DeviceExtHis.deviceExtId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.dasannetworks.vn.sb.model.DeviceExtHis"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.dasannetworks.vn.sb.model.DeviceExtHis"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.dasannetworks.vn.sb.model.DeviceExtHis"),
            true);
    public static long CUSTOMERSERIALNUMBER_COLUMN_BITMASK = 1L;
    public static long DEVICEEXTORDERID_COLUMN_BITMASK = 2L;
    public static long GPONSERIALNUMBER_COLUMN_BITMASK = 4L;
    public static long MODELNAME_COLUMN_BITMASK = 8L;
    public static long SERIALNUMBER_COLUMN_BITMASK = 16L;
    public static long DEVICEEXTID_COLUMN_BITMASK = 32L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.dasannetworks.vn.sb.model.DeviceExtHis"));
    private static ClassLoader _classLoader = DeviceExtHis.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            DeviceExtHis.class
        };
    private long _deviceExtId;
    private long _groupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private String _modelName;
    private String _originalModelName;
    private String _serialNumber;
    private String _originalSerialNumber;
    private String _gponSerialNumber;
    private String _originalGponSerialNumber;
    private String _boxSerialNumber;
    private String _customerSerialNumber;
    private String _originalCustomerSerialNumber;
    private String _manufacturerSerialNumber;
    private String _hardwareRevision;
    private String _softwareRevision;
    private String _macAddress;
    private String _partNumber;
    private String _specification;
    private Date _factoryOut;
    private int _status;
    private Date _ostStatusChangedDate;
    private Long _deviceExtOrderId;
    private Long _originalDeviceExtOrderId;
    private boolean _setOriginalDeviceExtOrderId;
    private long _columnBitmask;
    private DeviceExtHis _escapedModel;

    public DeviceExtHisModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _deviceExtId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setDeviceExtId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _deviceExtId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return DeviceExtHis.class;
    }

    @Override
    public String getModelClassName() {
        return DeviceExtHis.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("deviceExtId", getDeviceExtId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("modelName", getModelName());
        attributes.put("serialNumber", getSerialNumber());
        attributes.put("gponSerialNumber", getGponSerialNumber());
        attributes.put("boxSerialNumber", getBoxSerialNumber());
        attributes.put("customerSerialNumber", getCustomerSerialNumber());
        attributes.put("manufacturerSerialNumber", getManufacturerSerialNumber());
        attributes.put("hardwareRevision", getHardwareRevision());
        attributes.put("softwareRevision", getSoftwareRevision());
        attributes.put("macAddress", getMacAddress());
        attributes.put("partNumber", getPartNumber());
        attributes.put("specification", getSpecification());
        attributes.put("factoryOut", getFactoryOut());
        attributes.put("status", getStatus());
        attributes.put("ostStatusChangedDate", getOstStatusChangedDate());
        attributes.put("deviceExtOrderId", getDeviceExtOrderId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long deviceExtId = (Long) attributes.get("deviceExtId");

        if (deviceExtId != null) {
            setDeviceExtId(deviceExtId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String modelName = (String) attributes.get("modelName");

        if (modelName != null) {
            setModelName(modelName);
        }

        String serialNumber = (String) attributes.get("serialNumber");

        if (serialNumber != null) {
            setSerialNumber(serialNumber);
        }

        String gponSerialNumber = (String) attributes.get("gponSerialNumber");

        if (gponSerialNumber != null) {
            setGponSerialNumber(gponSerialNumber);
        }

        String boxSerialNumber = (String) attributes.get("boxSerialNumber");

        if (boxSerialNumber != null) {
            setBoxSerialNumber(boxSerialNumber);
        }

        String customerSerialNumber = (String) attributes.get(
                "customerSerialNumber");

        if (customerSerialNumber != null) {
            setCustomerSerialNumber(customerSerialNumber);
        }

        String manufacturerSerialNumber = (String) attributes.get(
                "manufacturerSerialNumber");

        if (manufacturerSerialNumber != null) {
            setManufacturerSerialNumber(manufacturerSerialNumber);
        }

        String hardwareRevision = (String) attributes.get("hardwareRevision");

        if (hardwareRevision != null) {
            setHardwareRevision(hardwareRevision);
        }

        String softwareRevision = (String) attributes.get("softwareRevision");

        if (softwareRevision != null) {
            setSoftwareRevision(softwareRevision);
        }

        String macAddress = (String) attributes.get("macAddress");

        if (macAddress != null) {
            setMacAddress(macAddress);
        }

        String partNumber = (String) attributes.get("partNumber");

        if (partNumber != null) {
            setPartNumber(partNumber);
        }

        String specification = (String) attributes.get("specification");

        if (specification != null) {
            setSpecification(specification);
        }

        Date factoryOut = (Date) attributes.get("factoryOut");

        if (factoryOut != null) {
            setFactoryOut(factoryOut);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        Date ostStatusChangedDate = (Date) attributes.get(
                "ostStatusChangedDate");

        if (ostStatusChangedDate != null) {
            setOstStatusChangedDate(ostStatusChangedDate);
        }

        Long deviceExtOrderId = (Long) attributes.get("deviceExtOrderId");

        if (deviceExtOrderId != null) {
            setDeviceExtOrderId(deviceExtOrderId);
        }
    }

    @Override
    public long getDeviceExtId() {
        return _deviceExtId;
    }

    @Override
    public void setDeviceExtId(long deviceExtId) {
        _deviceExtId = deviceExtId;
    }

    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getModelName() {
        if (_modelName == null) {
            return StringPool.BLANK;
        } else {
            return _modelName;
        }
    }

    @Override
    public void setModelName(String modelName) {
        _columnBitmask |= MODELNAME_COLUMN_BITMASK;

        if (_originalModelName == null) {
            _originalModelName = _modelName;
        }

        _modelName = modelName;
    }

    public String getOriginalModelName() {
        return GetterUtil.getString(_originalModelName);
    }

    @Override
    public String getSerialNumber() {
        return _serialNumber;
    }

    @Override
    public void setSerialNumber(String serialNumber) {
        _columnBitmask |= SERIALNUMBER_COLUMN_BITMASK;

        if (_originalSerialNumber == null) {
            _originalSerialNumber = _serialNumber;
        }

        _serialNumber = serialNumber;
    }

    public String getOriginalSerialNumber() {
        return _originalSerialNumber;
    }

    @Override
    public String getGponSerialNumber() {
        return _gponSerialNumber;
    }

    @Override
    public void setGponSerialNumber(String gponSerialNumber) {
        _columnBitmask |= GPONSERIALNUMBER_COLUMN_BITMASK;

        if (_originalGponSerialNumber == null) {
            _originalGponSerialNumber = _gponSerialNumber;
        }

        _gponSerialNumber = gponSerialNumber;
    }

    public String getOriginalGponSerialNumber() {
        return _originalGponSerialNumber;
    }

    @Override
    public String getBoxSerialNumber() {
        return _boxSerialNumber;
    }

    @Override
    public void setBoxSerialNumber(String boxSerialNumber) {
        _boxSerialNumber = boxSerialNumber;
    }

    @Override
    public String getCustomerSerialNumber() {
        return _customerSerialNumber;
    }

    @Override
    public void setCustomerSerialNumber(String customerSerialNumber) {
        _columnBitmask |= CUSTOMERSERIALNUMBER_COLUMN_BITMASK;

        if (_originalCustomerSerialNumber == null) {
            _originalCustomerSerialNumber = _customerSerialNumber;
        }

        _customerSerialNumber = customerSerialNumber;
    }

    public String getOriginalCustomerSerialNumber() {
        return _originalCustomerSerialNumber;
    }

    @Override
    public String getManufacturerSerialNumber() {
        return _manufacturerSerialNumber;
    }

    @Override
    public void setManufacturerSerialNumber(String manufacturerSerialNumber) {
        _manufacturerSerialNumber = manufacturerSerialNumber;
    }

    @Override
    public String getHardwareRevision() {
        if (_hardwareRevision == null) {
            return StringPool.BLANK;
        } else {
            return _hardwareRevision;
        }
    }

    @Override
    public void setHardwareRevision(String hardwareRevision) {
        _hardwareRevision = hardwareRevision;
    }

    @Override
    public String getSoftwareRevision() {
        if (_softwareRevision == null) {
            return StringPool.BLANK;
        } else {
            return _softwareRevision;
        }
    }

    @Override
    public void setSoftwareRevision(String softwareRevision) {
        _softwareRevision = softwareRevision;
    }

    @Override
    public String getMacAddress() {
        if (_macAddress == null) {
            return StringPool.BLANK;
        } else {
            return _macAddress;
        }
    }

    @Override
    public void setMacAddress(String macAddress) {
        _macAddress = macAddress;
    }

    @Override
    public String getPartNumber() {
        if (_partNumber == null) {
            return StringPool.BLANK;
        } else {
            return _partNumber;
        }
    }

    @Override
    public void setPartNumber(String partNumber) {
        _partNumber = partNumber;
    }

    @Override
    public String getSpecification() {
        if (_specification == null) {
            return StringPool.BLANK;
        } else {
            return _specification;
        }
    }

    @Override
    public void setSpecification(String specification) {
        _specification = specification;
    }

    @Override
    public Date getFactoryOut() {
        return _factoryOut;
    }

    @Override
    public void setFactoryOut(Date factoryOut) {
        _factoryOut = factoryOut;
    }

    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _status = status;
    }

    @Override
    public Date getOstStatusChangedDate() {
        return _ostStatusChangedDate;
    }

    @Override
    public void setOstStatusChangedDate(Date ostStatusChangedDate) {
        _ostStatusChangedDate = ostStatusChangedDate;
    }

    @Override
    public Long getDeviceExtOrderId() {
        return _deviceExtOrderId;
    }

    @Override
    public void setDeviceExtOrderId(Long deviceExtOrderId) {
        _columnBitmask |= DEVICEEXTORDERID_COLUMN_BITMASK;

        if (!_setOriginalDeviceExtOrderId) {
            _setOriginalDeviceExtOrderId = true;

            _originalDeviceExtOrderId = _deviceExtOrderId;
        }

        _deviceExtOrderId = deviceExtOrderId;
    }

    public Long getOriginalDeviceExtOrderId() {
        return _originalDeviceExtOrderId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            DeviceExtHis.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public DeviceExtHis toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (DeviceExtHis) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        DeviceExtHisImpl deviceExtHisImpl = new DeviceExtHisImpl();

        deviceExtHisImpl.setDeviceExtId(getDeviceExtId());
        deviceExtHisImpl.setGroupId(getGroupId());
        deviceExtHisImpl.setCompanyId(getCompanyId());
        deviceExtHisImpl.setUserId(getUserId());
        deviceExtHisImpl.setUserName(getUserName());
        deviceExtHisImpl.setCreateDate(getCreateDate());
        deviceExtHisImpl.setModifiedDate(getModifiedDate());
        deviceExtHisImpl.setModelName(getModelName());
        deviceExtHisImpl.setSerialNumber(getSerialNumber());
        deviceExtHisImpl.setGponSerialNumber(getGponSerialNumber());
        deviceExtHisImpl.setBoxSerialNumber(getBoxSerialNumber());
        deviceExtHisImpl.setCustomerSerialNumber(getCustomerSerialNumber());
        deviceExtHisImpl.setManufacturerSerialNumber(getManufacturerSerialNumber());
        deviceExtHisImpl.setHardwareRevision(getHardwareRevision());
        deviceExtHisImpl.setSoftwareRevision(getSoftwareRevision());
        deviceExtHisImpl.setMacAddress(getMacAddress());
        deviceExtHisImpl.setPartNumber(getPartNumber());
        deviceExtHisImpl.setSpecification(getSpecification());
        deviceExtHisImpl.setFactoryOut(getFactoryOut());
        deviceExtHisImpl.setStatus(getStatus());
        deviceExtHisImpl.setOstStatusChangedDate(getOstStatusChangedDate());
        deviceExtHisImpl.setDeviceExtOrderId(getDeviceExtOrderId());

        deviceExtHisImpl.resetOriginalValues();

        return deviceExtHisImpl;
    }

    @Override
    public int compareTo(DeviceExtHis deviceExtHis) {
        long primaryKey = deviceExtHis.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof DeviceExtHis)) {
            return false;
        }

        DeviceExtHis deviceExtHis = (DeviceExtHis) obj;

        long primaryKey = deviceExtHis.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        DeviceExtHisModelImpl deviceExtHisModelImpl = this;

        deviceExtHisModelImpl._originalModelName = deviceExtHisModelImpl._modelName;

        deviceExtHisModelImpl._originalSerialNumber = deviceExtHisModelImpl._serialNumber;

        deviceExtHisModelImpl._originalGponSerialNumber = deviceExtHisModelImpl._gponSerialNumber;

        deviceExtHisModelImpl._originalCustomerSerialNumber = deviceExtHisModelImpl._customerSerialNumber;

        deviceExtHisModelImpl._originalDeviceExtOrderId = deviceExtHisModelImpl._deviceExtOrderId;

        deviceExtHisModelImpl._setOriginalDeviceExtOrderId = false;

        deviceExtHisModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<DeviceExtHis> toCacheModel() {
        DeviceExtHisCacheModel deviceExtHisCacheModel = new DeviceExtHisCacheModel();

        deviceExtHisCacheModel.deviceExtId = getDeviceExtId();

        deviceExtHisCacheModel.groupId = getGroupId();

        deviceExtHisCacheModel.companyId = getCompanyId();

        deviceExtHisCacheModel.userId = getUserId();

        deviceExtHisCacheModel.userName = getUserName();

        String userName = deviceExtHisCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            deviceExtHisCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            deviceExtHisCacheModel.createDate = createDate.getTime();
        } else {
            deviceExtHisCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            deviceExtHisCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            deviceExtHisCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        deviceExtHisCacheModel.modelName = getModelName();

        String modelName = deviceExtHisCacheModel.modelName;

        if ((modelName != null) && (modelName.length() == 0)) {
            deviceExtHisCacheModel.modelName = null;
        }

        deviceExtHisCacheModel.serialNumber = getSerialNumber();

        String serialNumber = deviceExtHisCacheModel.serialNumber;

        if ((serialNumber != null) && (serialNumber.length() == 0)) {
            deviceExtHisCacheModel.serialNumber = null;
        }

        deviceExtHisCacheModel.gponSerialNumber = getGponSerialNumber();

        String gponSerialNumber = deviceExtHisCacheModel.gponSerialNumber;

        if ((gponSerialNumber != null) && (gponSerialNumber.length() == 0)) {
            deviceExtHisCacheModel.gponSerialNumber = null;
        }

        deviceExtHisCacheModel.boxSerialNumber = getBoxSerialNumber();

        String boxSerialNumber = deviceExtHisCacheModel.boxSerialNumber;

        if ((boxSerialNumber != null) && (boxSerialNumber.length() == 0)) {
            deviceExtHisCacheModel.boxSerialNumber = null;
        }

        deviceExtHisCacheModel.customerSerialNumber = getCustomerSerialNumber();

        String customerSerialNumber = deviceExtHisCacheModel.customerSerialNumber;

        if ((customerSerialNumber != null) &&
                (customerSerialNumber.length() == 0)) {
            deviceExtHisCacheModel.customerSerialNumber = null;
        }

        deviceExtHisCacheModel.manufacturerSerialNumber = getManufacturerSerialNumber();

        String manufacturerSerialNumber = deviceExtHisCacheModel.manufacturerSerialNumber;

        if ((manufacturerSerialNumber != null) &&
                (manufacturerSerialNumber.length() == 0)) {
            deviceExtHisCacheModel.manufacturerSerialNumber = null;
        }

        deviceExtHisCacheModel.hardwareRevision = getHardwareRevision();

        String hardwareRevision = deviceExtHisCacheModel.hardwareRevision;

        if ((hardwareRevision != null) && (hardwareRevision.length() == 0)) {
            deviceExtHisCacheModel.hardwareRevision = null;
        }

        deviceExtHisCacheModel.softwareRevision = getSoftwareRevision();

        String softwareRevision = deviceExtHisCacheModel.softwareRevision;

        if ((softwareRevision != null) && (softwareRevision.length() == 0)) {
            deviceExtHisCacheModel.softwareRevision = null;
        }

        deviceExtHisCacheModel.macAddress = getMacAddress();

        String macAddress = deviceExtHisCacheModel.macAddress;

        if ((macAddress != null) && (macAddress.length() == 0)) {
            deviceExtHisCacheModel.macAddress = null;
        }

        deviceExtHisCacheModel.partNumber = getPartNumber();

        String partNumber = deviceExtHisCacheModel.partNumber;

        if ((partNumber != null) && (partNumber.length() == 0)) {
            deviceExtHisCacheModel.partNumber = null;
        }

        deviceExtHisCacheModel.specification = getSpecification();

        String specification = deviceExtHisCacheModel.specification;

        if ((specification != null) && (specification.length() == 0)) {
            deviceExtHisCacheModel.specification = null;
        }

        Date factoryOut = getFactoryOut();

        if (factoryOut != null) {
            deviceExtHisCacheModel.factoryOut = factoryOut.getTime();
        } else {
            deviceExtHisCacheModel.factoryOut = Long.MIN_VALUE;
        }

        deviceExtHisCacheModel.status = getStatus();

        Date ostStatusChangedDate = getOstStatusChangedDate();

        if (ostStatusChangedDate != null) {
            deviceExtHisCacheModel.ostStatusChangedDate = ostStatusChangedDate.getTime();
        } else {
            deviceExtHisCacheModel.ostStatusChangedDate = Long.MIN_VALUE;
        }

        deviceExtHisCacheModel.deviceExtOrderId = getDeviceExtOrderId();

        return deviceExtHisCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(45);

        sb.append("{deviceExtId=");
        sb.append(getDeviceExtId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", modelName=");
        sb.append(getModelName());
        sb.append(", serialNumber=");
        sb.append(getSerialNumber());
        sb.append(", gponSerialNumber=");
        sb.append(getGponSerialNumber());
        sb.append(", boxSerialNumber=");
        sb.append(getBoxSerialNumber());
        sb.append(", customerSerialNumber=");
        sb.append(getCustomerSerialNumber());
        sb.append(", manufacturerSerialNumber=");
        sb.append(getManufacturerSerialNumber());
        sb.append(", hardwareRevision=");
        sb.append(getHardwareRevision());
        sb.append(", softwareRevision=");
        sb.append(getSoftwareRevision());
        sb.append(", macAddress=");
        sb.append(getMacAddress());
        sb.append(", partNumber=");
        sb.append(getPartNumber());
        sb.append(", specification=");
        sb.append(getSpecification());
        sb.append(", factoryOut=");
        sb.append(getFactoryOut());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", ostStatusChangedDate=");
        sb.append(getOstStatusChangedDate());
        sb.append(", deviceExtOrderId=");
        sb.append(getDeviceExtOrderId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(70);

        sb.append("<model><model-name>");
        sb.append("com.dasannetworks.vn.sb.model.DeviceExtHis");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>deviceExtId</column-name><column-value><![CDATA[");
        sb.append(getDeviceExtId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modelName</column-name><column-value><![CDATA[");
        sb.append(getModelName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>serialNumber</column-name><column-value><![CDATA[");
        sb.append(getSerialNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gponSerialNumber</column-name><column-value><![CDATA[");
        sb.append(getGponSerialNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>boxSerialNumber</column-name><column-value><![CDATA[");
        sb.append(getBoxSerialNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerSerialNumber</column-name><column-value><![CDATA[");
        sb.append(getCustomerSerialNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>manufacturerSerialNumber</column-name><column-value><![CDATA[");
        sb.append(getManufacturerSerialNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hardwareRevision</column-name><column-value><![CDATA[");
        sb.append(getHardwareRevision());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>softwareRevision</column-name><column-value><![CDATA[");
        sb.append(getSoftwareRevision());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>macAddress</column-name><column-value><![CDATA[");
        sb.append(getMacAddress());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partNumber</column-name><column-value><![CDATA[");
        sb.append(getPartNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>specification</column-name><column-value><![CDATA[");
        sb.append(getSpecification());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>factoryOut</column-name><column-value><![CDATA[");
        sb.append(getFactoryOut());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ostStatusChangedDate</column-name><column-value><![CDATA[");
        sb.append(getOstStatusChangedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deviceExtOrderId</column-name><column-value><![CDATA[");
        sb.append(getDeviceExtOrderId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
