package com.dasannetworks.tms.sb.model.impl;

import com.dasannetworks.tms.sb.model.Student;
import com.dasannetworks.tms.sb.model.StudentModel;
import com.dasannetworks.tms.sb.model.StudentSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Student service. Represents a row in the &quot;tms_Student&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dasannetworks.tms.sb.model.StudentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StudentImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see StudentImpl
 * @see com.dasannetworks.tms.sb.model.Student
 * @see com.dasannetworks.tms.sb.model.StudentModel
 * @generated
 */
@JSON(strict = true)
public class StudentModelImpl extends BaseModelImpl<Student>
    implements StudentModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a student model instance should use the {@link com.dasannetworks.tms.sb.model.Student} interface instead.
     */
    public static final String TABLE_NAME = "tms_Student";
    public static final Object[][] TABLE_COLUMNS = {
            { "uuid_", Types.VARCHAR },
            { "studentId", Types.BIGINT },
            { "firstname", Types.VARCHAR },
            { "lastName", Types.VARCHAR },
            { "branch", Types.VARCHAR },
            { "age", Types.INTEGER },
            { "email", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table tms_Student (uuid_ VARCHAR(75) null,studentId LONG not null primary key,firstname VARCHAR(75) null,lastName VARCHAR(75) null,branch VARCHAR(75) null,age INTEGER,email VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table tms_Student";
    public static final String ORDER_BY_JPQL = " ORDER BY student.studentId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tms_Student.studentId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.dasannetworks.tms.sb.model.Student"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.dasannetworks.tms.sb.model.Student"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.dasannetworks.tms.sb.model.Student"),
            true);
    public static long UUID_COLUMN_BITMASK = 1L;
    public static long STUDENTID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.dasannetworks.tms.sb.model.Student"));
    private static ClassLoader _classLoader = Student.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Student.class
        };
    private String _uuid;
    private String _originalUuid;
    private long _studentId;
    private String _firstname;
    private String _lastName;
    private String _branch;
    private int _age;
    private String _email;
    private long _columnBitmask;
    private Student _escapedModel;

    public StudentModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Student toModel(StudentSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Student model = new StudentImpl();

        model.setUuid(soapModel.getUuid());
        model.setStudentId(soapModel.getStudentId());
        model.setFirstname(soapModel.getFirstname());
        model.setLastName(soapModel.getLastName());
        model.setBranch(soapModel.getBranch());
        model.setAge(soapModel.getAge());
        model.setEmail(soapModel.getEmail());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Student> toModels(StudentSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Student> models = new ArrayList<Student>(soapModels.length);

        for (StudentSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _studentId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setStudentId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _studentId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Student.class;
    }

    @Override
    public String getModelClassName() {
        return Student.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("uuid", getUuid());
        attributes.put("studentId", getStudentId());
        attributes.put("firstname", getFirstname());
        attributes.put("lastName", getLastName());
        attributes.put("branch", getBranch());
        attributes.put("age", getAge());
        attributes.put("email", getEmail());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String uuid = (String) attributes.get("uuid");

        if (uuid != null) {
            setUuid(uuid);
        }

        Long studentId = (Long) attributes.get("studentId");

        if (studentId != null) {
            setStudentId(studentId);
        }

        String firstname = (String) attributes.get("firstname");

        if (firstname != null) {
            setFirstname(firstname);
        }

        String lastName = (String) attributes.get("lastName");

        if (lastName != null) {
            setLastName(lastName);
        }

        String branch = (String) attributes.get("branch");

        if (branch != null) {
            setBranch(branch);
        }

        Integer age = (Integer) attributes.get("age");

        if (age != null) {
            setAge(age);
        }

        String email = (String) attributes.get("email");

        if (email != null) {
            setEmail(email);
        }
    }

    @JSON
    @Override
    public String getUuid() {
        if (_uuid == null) {
            return StringPool.BLANK;
        } else {
            return _uuid;
        }
    }

    @Override
    public void setUuid(String uuid) {
        if (_originalUuid == null) {
            _originalUuid = _uuid;
        }

        _uuid = uuid;
    }

    public String getOriginalUuid() {
        return GetterUtil.getString(_originalUuid);
    }

    @JSON
    @Override
    public long getStudentId() {
        return _studentId;
    }

    @Override
    public void setStudentId(long studentId) {
        _studentId = studentId;
    }

    @JSON
    @Override
    public String getFirstname() {
        if (_firstname == null) {
            return StringPool.BLANK;
        } else {
            return _firstname;
        }
    }

    @Override
    public void setFirstname(String firstname) {
        _firstname = firstname;
    }

    @JSON
    @Override
    public String getLastName() {
        if (_lastName == null) {
            return StringPool.BLANK;
        } else {
            return _lastName;
        }
    }

    @Override
    public void setLastName(String lastName) {
        _lastName = lastName;
    }

    @JSON
    @Override
    public String getBranch() {
        if (_branch == null) {
            return StringPool.BLANK;
        } else {
            return _branch;
        }
    }

    @Override
    public void setBranch(String branch) {
        _branch = branch;
    }

    @JSON
    @Override
    public int getAge() {
        return _age;
    }

    @Override
    public void setAge(int age) {
        _age = age;
    }

    @JSON
    @Override
    public String getEmail() {
        if (_email == null) {
            return StringPool.BLANK;
        } else {
            return _email;
        }
    }

    @Override
    public void setEmail(String email) {
        _email = email;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Student.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Student toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Student) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        StudentImpl studentImpl = new StudentImpl();

        studentImpl.setUuid(getUuid());
        studentImpl.setStudentId(getStudentId());
        studentImpl.setFirstname(getFirstname());
        studentImpl.setLastName(getLastName());
        studentImpl.setBranch(getBranch());
        studentImpl.setAge(getAge());
        studentImpl.setEmail(getEmail());

        studentImpl.resetOriginalValues();

        return studentImpl;
    }

    @Override
    public int compareTo(Student student) {
        long primaryKey = student.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Student)) {
            return false;
        }

        Student student = (Student) obj;

        long primaryKey = student.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        StudentModelImpl studentModelImpl = this;

        studentModelImpl._originalUuid = studentModelImpl._uuid;

        studentModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Student> toCacheModel() {
        StudentCacheModel studentCacheModel = new StudentCacheModel();

        studentCacheModel.uuid = getUuid();

        String uuid = studentCacheModel.uuid;

        if ((uuid != null) && (uuid.length() == 0)) {
            studentCacheModel.uuid = null;
        }

        studentCacheModel.studentId = getStudentId();

        studentCacheModel.firstname = getFirstname();

        String firstname = studentCacheModel.firstname;

        if ((firstname != null) && (firstname.length() == 0)) {
            studentCacheModel.firstname = null;
        }

        studentCacheModel.lastName = getLastName();

        String lastName = studentCacheModel.lastName;

        if ((lastName != null) && (lastName.length() == 0)) {
            studentCacheModel.lastName = null;
        }

        studentCacheModel.branch = getBranch();

        String branch = studentCacheModel.branch;

        if ((branch != null) && (branch.length() == 0)) {
            studentCacheModel.branch = null;
        }

        studentCacheModel.age = getAge();

        studentCacheModel.email = getEmail();

        String email = studentCacheModel.email;

        if ((email != null) && (email.length() == 0)) {
            studentCacheModel.email = null;
        }

        return studentCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(15);

        sb.append("{uuid=");
        sb.append(getUuid());
        sb.append(", studentId=");
        sb.append(getStudentId());
        sb.append(", firstname=");
        sb.append(getFirstname());
        sb.append(", lastName=");
        sb.append(getLastName());
        sb.append(", branch=");
        sb.append(getBranch());
        sb.append(", age=");
        sb.append(getAge());
        sb.append(", email=");
        sb.append(getEmail());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(25);

        sb.append("<model><model-name>");
        sb.append("com.dasannetworks.tms.sb.model.Student");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>uuid</column-name><column-value><![CDATA[");
        sb.append(getUuid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>studentId</column-name><column-value><![CDATA[");
        sb.append(getStudentId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstname</column-name><column-value><![CDATA[");
        sb.append(getFirstname());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastName</column-name><column-value><![CDATA[");
        sb.append(getLastName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>branch</column-name><column-value><![CDATA[");
        sb.append(getBranch());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>age</column-name><column-value><![CDATA[");
        sb.append(getAge());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>email</column-name><column-value><![CDATA[");
        sb.append(getEmail());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
