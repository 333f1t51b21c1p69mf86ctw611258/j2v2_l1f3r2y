package com.dasannetworks.vn.sb.model.impl;

import com.dasannetworks.vn.sb.model.RmaRequest;
import com.dasannetworks.vn.sb.model.RmaRequestModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RmaRequest service. Represents a row in the &quot;tms_RmaRequest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dasannetworks.vn.sb.model.RmaRequestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RmaRequestImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see RmaRequestImpl
 * @see com.dasannetworks.vn.sb.model.RmaRequest
 * @see com.dasannetworks.vn.sb.model.RmaRequestModel
 * @generated
 */
public class RmaRequestModelImpl extends BaseModelImpl<RmaRequest>
    implements RmaRequestModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a rma request model instance should use the {@link com.dasannetworks.vn.sb.model.RmaRequest} interface instead.
     */
    public static final String TABLE_NAME = "tms_RmaRequest";
    public static final Object[][] TABLE_COLUMNS = {
            { "uuid_", Types.VARCHAR },
            { "rmaRequestId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "groupId", Types.BIGINT },
            { "rmaRequestNumber", Types.VARCHAR },
            { "cusCode", Types.VARCHAR },
            { "cusInCharge", Types.VARCHAR },
            { "cusEmail", Types.VARCHAR },
            { "cusPhone", Types.VARCHAR },
            { "cusLocation", Types.VARCHAR },
            { "provInCharge", Types.VARCHAR },
            { "creatingEstReturnDate", Types.TIMESTAMP },
            { "creatingReturnedDate", Types.TIMESTAMP },
            { "creatingAssignedDate", Types.TIMESTAMP },
            { "creatingNote", Types.VARCHAR },
            { "partnerCode", Types.VARCHAR },
            { "partnerInCharge", Types.VARCHAR },
            { "partnerEmail", Types.VARCHAR },
            { "partnerPhone", Types.VARCHAR },
            { "partnerLocation", Types.VARCHAR },
            { "sendingEstReturnDate", Types.TIMESTAMP },
            { "sendingReturnedDate", Types.TIMESTAMP },
            { "sendingAssignedDate", Types.TIMESTAMP },
            { "sendingNote", Types.VARCHAR },
            { "receivingReturnedDate", Types.TIMESTAMP },
            { "receivingNote", Types.VARCHAR },
            { "returningReturnedDate", Types.TIMESTAMP },
            { "returningNote", Types.VARCHAR },
            { "status", Types.INTEGER },
            { "statusByUserId", Types.BIGINT },
            { "statusDate", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table tms_RmaRequest (uuid_ VARCHAR(75) null,rmaRequestId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,groupId LONG,rmaRequestNumber VARCHAR(75) null,cusCode VARCHAR(75) null,cusInCharge VARCHAR(75) null,cusEmail VARCHAR(75) null,cusPhone VARCHAR(75) null,cusLocation VARCHAR(75) null,provInCharge VARCHAR(75) null,creatingEstReturnDate DATE null,creatingReturnedDate DATE null,creatingAssignedDate DATE null,creatingNote VARCHAR(75) null,partnerCode VARCHAR(75) null,partnerInCharge VARCHAR(75) null,partnerEmail VARCHAR(75) null,partnerPhone VARCHAR(75) null,partnerLocation VARCHAR(75) null,sendingEstReturnDate DATE null,sendingReturnedDate DATE null,sendingAssignedDate DATE null,sendingNote VARCHAR(75) null,receivingReturnedDate DATE null,receivingNote VARCHAR(75) null,returningReturnedDate DATE null,returningNote VARCHAR(75) null,status INTEGER,statusByUserId LONG,statusDate DATE null)";
    public static final String TABLE_SQL_DROP = "drop table tms_RmaRequest";
    public static final String ORDER_BY_JPQL = " ORDER BY rmaRequest.rmaRequestId ASC, rmaRequest.modifiedDate DESC";
    public static final String ORDER_BY_SQL = " ORDER BY tms_RmaRequest.rmaRequestId ASC, tms_RmaRequest.modifiedDate DESC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.dasannetworks.vn.sb.model.RmaRequest"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.dasannetworks.vn.sb.model.RmaRequest"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.dasannetworks.vn.sb.model.RmaRequest"),
            true);
    public static long COMPANYID_COLUMN_BITMASK = 1L;
    public static long CUSCODE_COLUMN_BITMASK = 2L;
    public static long GROUPID_COLUMN_BITMASK = 4L;
    public static long RMAREQUESTNUMBER_COLUMN_BITMASK = 8L;
    public static long STATUS_COLUMN_BITMASK = 16L;
    public static long UUID_COLUMN_BITMASK = 32L;
    public static long RMAREQUESTID_COLUMN_BITMASK = 64L;
    public static long MODIFIEDDATE_COLUMN_BITMASK = 128L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.dasannetworks.vn.sb.model.RmaRequest"));
    private static ClassLoader _classLoader = RmaRequest.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            RmaRequest.class
        };
    private String _uuid;
    private String _originalUuid;
    private long _rmaRequestId;
    private long _companyId;
    private long _originalCompanyId;
    private boolean _setOriginalCompanyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private long _groupId;
    private long _originalGroupId;
    private boolean _setOriginalGroupId;
    private String _rmaRequestNumber;
    private String _originalRmaRequestNumber;
    private String _cusCode;
    private String _originalCusCode;
    private String _cusInCharge;
    private String _cusEmail;
    private String _cusPhone;
    private String _cusLocation;
    private String _provInCharge;
    private Date _creatingEstReturnDate;
    private Date _creatingReturnedDate;
    private Date _creatingAssignedDate;
    private String _creatingNote;
    private String _partnerCode;
    private String _partnerInCharge;
    private String _partnerEmail;
    private String _partnerPhone;
    private String _partnerLocation;
    private Date _sendingEstReturnDate;
    private Date _sendingReturnedDate;
    private Date _sendingAssignedDate;
    private String _sendingNote;
    private Date _receivingReturnedDate;
    private String _receivingNote;
    private Date _returningReturnedDate;
    private String _returningNote;
    private int _status;
    private int _originalStatus;
    private boolean _setOriginalStatus;
    private long _statusByUserId;
    private String _statusByUserUuid;
    private Date _statusDate;
    private long _columnBitmask;
    private RmaRequest _escapedModel;

    public RmaRequestModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _rmaRequestId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setRmaRequestId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _rmaRequestId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return RmaRequest.class;
    }

    @Override
    public String getModelClassName() {
        return RmaRequest.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("uuid", getUuid());
        attributes.put("rmaRequestId", getRmaRequestId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("groupId", getGroupId());
        attributes.put("rmaRequestNumber", getRmaRequestNumber());
        attributes.put("cusCode", getCusCode());
        attributes.put("cusInCharge", getCusInCharge());
        attributes.put("cusEmail", getCusEmail());
        attributes.put("cusPhone", getCusPhone());
        attributes.put("cusLocation", getCusLocation());
        attributes.put("provInCharge", getProvInCharge());
        attributes.put("creatingEstReturnDate", getCreatingEstReturnDate());
        attributes.put("creatingReturnedDate", getCreatingReturnedDate());
        attributes.put("creatingAssignedDate", getCreatingAssignedDate());
        attributes.put("creatingNote", getCreatingNote());
        attributes.put("partnerCode", getPartnerCode());
        attributes.put("partnerInCharge", getPartnerInCharge());
        attributes.put("partnerEmail", getPartnerEmail());
        attributes.put("partnerPhone", getPartnerPhone());
        attributes.put("partnerLocation", getPartnerLocation());
        attributes.put("sendingEstReturnDate", getSendingEstReturnDate());
        attributes.put("sendingReturnedDate", getSendingReturnedDate());
        attributes.put("sendingAssignedDate", getSendingAssignedDate());
        attributes.put("sendingNote", getSendingNote());
        attributes.put("receivingReturnedDate", getReceivingReturnedDate());
        attributes.put("receivingNote", getReceivingNote());
        attributes.put("returningReturnedDate", getReturningReturnedDate());
        attributes.put("returningNote", getReturningNote());
        attributes.put("status", getStatus());
        attributes.put("statusByUserId", getStatusByUserId());
        attributes.put("statusDate", getStatusDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String uuid = (String) attributes.get("uuid");

        if (uuid != null) {
            setUuid(uuid);
        }

        Long rmaRequestId = (Long) attributes.get("rmaRequestId");

        if (rmaRequestId != null) {
            setRmaRequestId(rmaRequestId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        String rmaRequestNumber = (String) attributes.get("rmaRequestNumber");

        if (rmaRequestNumber != null) {
            setRmaRequestNumber(rmaRequestNumber);
        }

        String cusCode = (String) attributes.get("cusCode");

        if (cusCode != null) {
            setCusCode(cusCode);
        }

        String cusInCharge = (String) attributes.get("cusInCharge");

        if (cusInCharge != null) {
            setCusInCharge(cusInCharge);
        }

        String cusEmail = (String) attributes.get("cusEmail");

        if (cusEmail != null) {
            setCusEmail(cusEmail);
        }

        String cusPhone = (String) attributes.get("cusPhone");

        if (cusPhone != null) {
            setCusPhone(cusPhone);
        }

        String cusLocation = (String) attributes.get("cusLocation");

        if (cusLocation != null) {
            setCusLocation(cusLocation);
        }

        String provInCharge = (String) attributes.get("provInCharge");

        if (provInCharge != null) {
            setProvInCharge(provInCharge);
        }

        Date creatingEstReturnDate = (Date) attributes.get(
                "creatingEstReturnDate");

        if (creatingEstReturnDate != null) {
            setCreatingEstReturnDate(creatingEstReturnDate);
        }

        Date creatingReturnedDate = (Date) attributes.get(
                "creatingReturnedDate");

        if (creatingReturnedDate != null) {
            setCreatingReturnedDate(creatingReturnedDate);
        }

        Date creatingAssignedDate = (Date) attributes.get(
                "creatingAssignedDate");

        if (creatingAssignedDate != null) {
            setCreatingAssignedDate(creatingAssignedDate);
        }

        String creatingNote = (String) attributes.get("creatingNote");

        if (creatingNote != null) {
            setCreatingNote(creatingNote);
        }

        String partnerCode = (String) attributes.get("partnerCode");

        if (partnerCode != null) {
            setPartnerCode(partnerCode);
        }

        String partnerInCharge = (String) attributes.get("partnerInCharge");

        if (partnerInCharge != null) {
            setPartnerInCharge(partnerInCharge);
        }

        String partnerEmail = (String) attributes.get("partnerEmail");

        if (partnerEmail != null) {
            setPartnerEmail(partnerEmail);
        }

        String partnerPhone = (String) attributes.get("partnerPhone");

        if (partnerPhone != null) {
            setPartnerPhone(partnerPhone);
        }

        String partnerLocation = (String) attributes.get("partnerLocation");

        if (partnerLocation != null) {
            setPartnerLocation(partnerLocation);
        }

        Date sendingEstReturnDate = (Date) attributes.get(
                "sendingEstReturnDate");

        if (sendingEstReturnDate != null) {
            setSendingEstReturnDate(sendingEstReturnDate);
        }

        Date sendingReturnedDate = (Date) attributes.get("sendingReturnedDate");

        if (sendingReturnedDate != null) {
            setSendingReturnedDate(sendingReturnedDate);
        }

        Date sendingAssignedDate = (Date) attributes.get("sendingAssignedDate");

        if (sendingAssignedDate != null) {
            setSendingAssignedDate(sendingAssignedDate);
        }

        String sendingNote = (String) attributes.get("sendingNote");

        if (sendingNote != null) {
            setSendingNote(sendingNote);
        }

        Date receivingReturnedDate = (Date) attributes.get(
                "receivingReturnedDate");

        if (receivingReturnedDate != null) {
            setReceivingReturnedDate(receivingReturnedDate);
        }

        String receivingNote = (String) attributes.get("receivingNote");

        if (receivingNote != null) {
            setReceivingNote(receivingNote);
        }

        Date returningReturnedDate = (Date) attributes.get(
                "returningReturnedDate");

        if (returningReturnedDate != null) {
            setReturningReturnedDate(returningReturnedDate);
        }

        String returningNote = (String) attributes.get("returningNote");

        if (returningNote != null) {
            setReturningNote(returningNote);
        }

        Integer status = (Integer) attributes.get("status");

        if (status != null) {
            setStatus(status);
        }

        Long statusByUserId = (Long) attributes.get("statusByUserId");

        if (statusByUserId != null) {
            setStatusByUserId(statusByUserId);
        }

        Date statusDate = (Date) attributes.get("statusDate");

        if (statusDate != null) {
            setStatusDate(statusDate);
        }
    }

    @Override
    public String getUuid() {
        if (_uuid == null) {
            return StringPool.BLANK;
        } else {
            return _uuid;
        }
    }

    @Override
    public void setUuid(String uuid) {
        if (_originalUuid == null) {
            _originalUuid = _uuid;
        }

        _uuid = uuid;
    }

    public String getOriginalUuid() {
        return GetterUtil.getString(_originalUuid);
    }

    @Override
    public long getRmaRequestId() {
        return _rmaRequestId;
    }

    @Override
    public void setRmaRequestId(long rmaRequestId) {
        _columnBitmask = -1L;

        _rmaRequestId = rmaRequestId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _columnBitmask |= COMPANYID_COLUMN_BITMASK;

        if (!_setOriginalCompanyId) {
            _setOriginalCompanyId = true;

            _originalCompanyId = _companyId;
        }

        _companyId = companyId;
    }

    public long getOriginalCompanyId() {
        return _originalCompanyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _columnBitmask = -1L;

        _modifiedDate = modifiedDate;
    }

    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;

        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;

            _originalGroupId = _groupId;
        }

        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    @Override
    public String getRmaRequestNumber() {
        if (_rmaRequestNumber == null) {
            return StringPool.BLANK;
        } else {
            return _rmaRequestNumber;
        }
    }

    @Override
    public void setRmaRequestNumber(String rmaRequestNumber) {
        _columnBitmask |= RMAREQUESTNUMBER_COLUMN_BITMASK;

        if (_originalRmaRequestNumber == null) {
            _originalRmaRequestNumber = _rmaRequestNumber;
        }

        _rmaRequestNumber = rmaRequestNumber;
    }

    public String getOriginalRmaRequestNumber() {
        return GetterUtil.getString(_originalRmaRequestNumber);
    }

    @Override
    public String getCusCode() {
        if (_cusCode == null) {
            return StringPool.BLANK;
        } else {
            return _cusCode;
        }
    }

    @Override
    public void setCusCode(String cusCode) {
        _columnBitmask |= CUSCODE_COLUMN_BITMASK;

        if (_originalCusCode == null) {
            _originalCusCode = _cusCode;
        }

        _cusCode = cusCode;
    }

    public String getOriginalCusCode() {
        return GetterUtil.getString(_originalCusCode);
    }

    @Override
    public String getCusInCharge() {
        if (_cusInCharge == null) {
            return StringPool.BLANK;
        } else {
            return _cusInCharge;
        }
    }

    @Override
    public void setCusInCharge(String cusInCharge) {
        _cusInCharge = cusInCharge;
    }

    @Override
    public String getCusEmail() {
        if (_cusEmail == null) {
            return StringPool.BLANK;
        } else {
            return _cusEmail;
        }
    }

    @Override
    public void setCusEmail(String cusEmail) {
        _cusEmail = cusEmail;
    }

    @Override
    public String getCusPhone() {
        if (_cusPhone == null) {
            return StringPool.BLANK;
        } else {
            return _cusPhone;
        }
    }

    @Override
    public void setCusPhone(String cusPhone) {
        _cusPhone = cusPhone;
    }

    @Override
    public String getCusLocation() {
        if (_cusLocation == null) {
            return StringPool.BLANK;
        } else {
            return _cusLocation;
        }
    }

    @Override
    public void setCusLocation(String cusLocation) {
        _cusLocation = cusLocation;
    }

    @Override
    public String getProvInCharge() {
        if (_provInCharge == null) {
            return StringPool.BLANK;
        } else {
            return _provInCharge;
        }
    }

    @Override
    public void setProvInCharge(String provInCharge) {
        _provInCharge = provInCharge;
    }

    @Override
    public Date getCreatingEstReturnDate() {
        return _creatingEstReturnDate;
    }

    @Override
    public void setCreatingEstReturnDate(Date creatingEstReturnDate) {
        _creatingEstReturnDate = creatingEstReturnDate;
    }

    @Override
    public Date getCreatingReturnedDate() {
        return _creatingReturnedDate;
    }

    @Override
    public void setCreatingReturnedDate(Date creatingReturnedDate) {
        _creatingReturnedDate = creatingReturnedDate;
    }

    @Override
    public Date getCreatingAssignedDate() {
        return _creatingAssignedDate;
    }

    @Override
    public void setCreatingAssignedDate(Date creatingAssignedDate) {
        _creatingAssignedDate = creatingAssignedDate;
    }

    @Override
    public String getCreatingNote() {
        if (_creatingNote == null) {
            return StringPool.BLANK;
        } else {
            return _creatingNote;
        }
    }

    @Override
    public void setCreatingNote(String creatingNote) {
        _creatingNote = creatingNote;
    }

    @Override
    public String getPartnerCode() {
        if (_partnerCode == null) {
            return StringPool.BLANK;
        } else {
            return _partnerCode;
        }
    }

    @Override
    public void setPartnerCode(String partnerCode) {
        _partnerCode = partnerCode;
    }

    @Override
    public String getPartnerInCharge() {
        if (_partnerInCharge == null) {
            return StringPool.BLANK;
        } else {
            return _partnerInCharge;
        }
    }

    @Override
    public void setPartnerInCharge(String partnerInCharge) {
        _partnerInCharge = partnerInCharge;
    }

    @Override
    public String getPartnerEmail() {
        if (_partnerEmail == null) {
            return StringPool.BLANK;
        } else {
            return _partnerEmail;
        }
    }

    @Override
    public void setPartnerEmail(String partnerEmail) {
        _partnerEmail = partnerEmail;
    }

    @Override
    public String getPartnerPhone() {
        if (_partnerPhone == null) {
            return StringPool.BLANK;
        } else {
            return _partnerPhone;
        }
    }

    @Override
    public void setPartnerPhone(String partnerPhone) {
        _partnerPhone = partnerPhone;
    }

    @Override
    public String getPartnerLocation() {
        if (_partnerLocation == null) {
            return StringPool.BLANK;
        } else {
            return _partnerLocation;
        }
    }

    @Override
    public void setPartnerLocation(String partnerLocation) {
        _partnerLocation = partnerLocation;
    }

    @Override
    public Date getSendingEstReturnDate() {
        return _sendingEstReturnDate;
    }

    @Override
    public void setSendingEstReturnDate(Date sendingEstReturnDate) {
        _sendingEstReturnDate = sendingEstReturnDate;
    }

    @Override
    public Date getSendingReturnedDate() {
        return _sendingReturnedDate;
    }

    @Override
    public void setSendingReturnedDate(Date sendingReturnedDate) {
        _sendingReturnedDate = sendingReturnedDate;
    }

    @Override
    public Date getSendingAssignedDate() {
        return _sendingAssignedDate;
    }

    @Override
    public void setSendingAssignedDate(Date sendingAssignedDate) {
        _sendingAssignedDate = sendingAssignedDate;
    }

    @Override
    public String getSendingNote() {
        if (_sendingNote == null) {
            return StringPool.BLANK;
        } else {
            return _sendingNote;
        }
    }

    @Override
    public void setSendingNote(String sendingNote) {
        _sendingNote = sendingNote;
    }

    @Override
    public Date getReceivingReturnedDate() {
        return _receivingReturnedDate;
    }

    @Override
    public void setReceivingReturnedDate(Date receivingReturnedDate) {
        _receivingReturnedDate = receivingReturnedDate;
    }

    @Override
    public String getReceivingNote() {
        if (_receivingNote == null) {
            return StringPool.BLANK;
        } else {
            return _receivingNote;
        }
    }

    @Override
    public void setReceivingNote(String receivingNote) {
        _receivingNote = receivingNote;
    }

    @Override
    public Date getReturningReturnedDate() {
        return _returningReturnedDate;
    }

    @Override
    public void setReturningReturnedDate(Date returningReturnedDate) {
        _returningReturnedDate = returningReturnedDate;
    }

    @Override
    public String getReturningNote() {
        if (_returningNote == null) {
            return StringPool.BLANK;
        } else {
            return _returningNote;
        }
    }

    @Override
    public void setReturningNote(String returningNote) {
        _returningNote = returningNote;
    }

    @Override
    public int getStatus() {
        return _status;
    }

    @Override
    public void setStatus(int status) {
        _columnBitmask |= STATUS_COLUMN_BITMASK;

        if (!_setOriginalStatus) {
            _setOriginalStatus = true;

            _originalStatus = _status;
        }

        _status = status;
    }

    public int getOriginalStatus() {
        return _originalStatus;
    }

    @Override
    public long getStatusByUserId() {
        return _statusByUserId;
    }

    @Override
    public void setStatusByUserId(long statusByUserId) {
        _statusByUserId = statusByUserId;
    }

    @Override
    public String getStatusByUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getStatusByUserId(), "uuid",
            _statusByUserUuid);
    }

    @Override
    public void setStatusByUserUuid(String statusByUserUuid) {
        _statusByUserUuid = statusByUserUuid;
    }

    @Override
    public Date getStatusDate() {
        return _statusDate;
    }

    @Override
    public void setStatusDate(Date statusDate) {
        _statusDate = statusDate;
    }

    @Override
    public StagedModelType getStagedModelType() {
        return new StagedModelType(PortalUtil.getClassNameId(
                RmaRequest.class.getName()));
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            RmaRequest.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public RmaRequest toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (RmaRequest) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RmaRequestImpl rmaRequestImpl = new RmaRequestImpl();

        rmaRequestImpl.setUuid(getUuid());
        rmaRequestImpl.setRmaRequestId(getRmaRequestId());
        rmaRequestImpl.setCompanyId(getCompanyId());
        rmaRequestImpl.setUserId(getUserId());
        rmaRequestImpl.setUserName(getUserName());
        rmaRequestImpl.setCreateDate(getCreateDate());
        rmaRequestImpl.setModifiedDate(getModifiedDate());
        rmaRequestImpl.setGroupId(getGroupId());
        rmaRequestImpl.setRmaRequestNumber(getRmaRequestNumber());
        rmaRequestImpl.setCusCode(getCusCode());
        rmaRequestImpl.setCusInCharge(getCusInCharge());
        rmaRequestImpl.setCusEmail(getCusEmail());
        rmaRequestImpl.setCusPhone(getCusPhone());
        rmaRequestImpl.setCusLocation(getCusLocation());
        rmaRequestImpl.setProvInCharge(getProvInCharge());
        rmaRequestImpl.setCreatingEstReturnDate(getCreatingEstReturnDate());
        rmaRequestImpl.setCreatingReturnedDate(getCreatingReturnedDate());
        rmaRequestImpl.setCreatingAssignedDate(getCreatingAssignedDate());
        rmaRequestImpl.setCreatingNote(getCreatingNote());
        rmaRequestImpl.setPartnerCode(getPartnerCode());
        rmaRequestImpl.setPartnerInCharge(getPartnerInCharge());
        rmaRequestImpl.setPartnerEmail(getPartnerEmail());
        rmaRequestImpl.setPartnerPhone(getPartnerPhone());
        rmaRequestImpl.setPartnerLocation(getPartnerLocation());
        rmaRequestImpl.setSendingEstReturnDate(getSendingEstReturnDate());
        rmaRequestImpl.setSendingReturnedDate(getSendingReturnedDate());
        rmaRequestImpl.setSendingAssignedDate(getSendingAssignedDate());
        rmaRequestImpl.setSendingNote(getSendingNote());
        rmaRequestImpl.setReceivingReturnedDate(getReceivingReturnedDate());
        rmaRequestImpl.setReceivingNote(getReceivingNote());
        rmaRequestImpl.setReturningReturnedDate(getReturningReturnedDate());
        rmaRequestImpl.setReturningNote(getReturningNote());
        rmaRequestImpl.setStatus(getStatus());
        rmaRequestImpl.setStatusByUserId(getStatusByUserId());
        rmaRequestImpl.setStatusDate(getStatusDate());

        rmaRequestImpl.resetOriginalValues();

        return rmaRequestImpl;
    }

    @Override
    public int compareTo(RmaRequest rmaRequest) {
        int value = 0;

        if (getRmaRequestId() < rmaRequest.getRmaRequestId()) {
            value = -1;
        } else if (getRmaRequestId() > rmaRequest.getRmaRequestId()) {
            value = 1;
        } else {
            value = 0;
        }

        if (value != 0) {
            return value;
        }

        value = DateUtil.compareTo(getModifiedDate(),
                rmaRequest.getModifiedDate());

        value = value * -1;

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof RmaRequest)) {
            return false;
        }

        RmaRequest rmaRequest = (RmaRequest) obj;

        long primaryKey = rmaRequest.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        RmaRequestModelImpl rmaRequestModelImpl = this;

        rmaRequestModelImpl._originalUuid = rmaRequestModelImpl._uuid;

        rmaRequestModelImpl._originalCompanyId = rmaRequestModelImpl._companyId;

        rmaRequestModelImpl._setOriginalCompanyId = false;

        rmaRequestModelImpl._originalGroupId = rmaRequestModelImpl._groupId;

        rmaRequestModelImpl._setOriginalGroupId = false;

        rmaRequestModelImpl._originalRmaRequestNumber = rmaRequestModelImpl._rmaRequestNumber;

        rmaRequestModelImpl._originalCusCode = rmaRequestModelImpl._cusCode;

        rmaRequestModelImpl._originalStatus = rmaRequestModelImpl._status;

        rmaRequestModelImpl._setOriginalStatus = false;

        rmaRequestModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<RmaRequest> toCacheModel() {
        RmaRequestCacheModel rmaRequestCacheModel = new RmaRequestCacheModel();

        rmaRequestCacheModel.uuid = getUuid();

        String uuid = rmaRequestCacheModel.uuid;

        if ((uuid != null) && (uuid.length() == 0)) {
            rmaRequestCacheModel.uuid = null;
        }

        rmaRequestCacheModel.rmaRequestId = getRmaRequestId();

        rmaRequestCacheModel.companyId = getCompanyId();

        rmaRequestCacheModel.userId = getUserId();

        rmaRequestCacheModel.userName = getUserName();

        String userName = rmaRequestCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            rmaRequestCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            rmaRequestCacheModel.createDate = createDate.getTime();
        } else {
            rmaRequestCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            rmaRequestCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            rmaRequestCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        rmaRequestCacheModel.groupId = getGroupId();

        rmaRequestCacheModel.rmaRequestNumber = getRmaRequestNumber();

        String rmaRequestNumber = rmaRequestCacheModel.rmaRequestNumber;

        if ((rmaRequestNumber != null) && (rmaRequestNumber.length() == 0)) {
            rmaRequestCacheModel.rmaRequestNumber = null;
        }

        rmaRequestCacheModel.cusCode = getCusCode();

        String cusCode = rmaRequestCacheModel.cusCode;

        if ((cusCode != null) && (cusCode.length() == 0)) {
            rmaRequestCacheModel.cusCode = null;
        }

        rmaRequestCacheModel.cusInCharge = getCusInCharge();

        String cusInCharge = rmaRequestCacheModel.cusInCharge;

        if ((cusInCharge != null) && (cusInCharge.length() == 0)) {
            rmaRequestCacheModel.cusInCharge = null;
        }

        rmaRequestCacheModel.cusEmail = getCusEmail();

        String cusEmail = rmaRequestCacheModel.cusEmail;

        if ((cusEmail != null) && (cusEmail.length() == 0)) {
            rmaRequestCacheModel.cusEmail = null;
        }

        rmaRequestCacheModel.cusPhone = getCusPhone();

        String cusPhone = rmaRequestCacheModel.cusPhone;

        if ((cusPhone != null) && (cusPhone.length() == 0)) {
            rmaRequestCacheModel.cusPhone = null;
        }

        rmaRequestCacheModel.cusLocation = getCusLocation();

        String cusLocation = rmaRequestCacheModel.cusLocation;

        if ((cusLocation != null) && (cusLocation.length() == 0)) {
            rmaRequestCacheModel.cusLocation = null;
        }

        rmaRequestCacheModel.provInCharge = getProvInCharge();

        String provInCharge = rmaRequestCacheModel.provInCharge;

        if ((provInCharge != null) && (provInCharge.length() == 0)) {
            rmaRequestCacheModel.provInCharge = null;
        }

        Date creatingEstReturnDate = getCreatingEstReturnDate();

        if (creatingEstReturnDate != null) {
            rmaRequestCacheModel.creatingEstReturnDate = creatingEstReturnDate.getTime();
        } else {
            rmaRequestCacheModel.creatingEstReturnDate = Long.MIN_VALUE;
        }

        Date creatingReturnedDate = getCreatingReturnedDate();

        if (creatingReturnedDate != null) {
            rmaRequestCacheModel.creatingReturnedDate = creatingReturnedDate.getTime();
        } else {
            rmaRequestCacheModel.creatingReturnedDate = Long.MIN_VALUE;
        }

        Date creatingAssignedDate = getCreatingAssignedDate();

        if (creatingAssignedDate != null) {
            rmaRequestCacheModel.creatingAssignedDate = creatingAssignedDate.getTime();
        } else {
            rmaRequestCacheModel.creatingAssignedDate = Long.MIN_VALUE;
        }

        rmaRequestCacheModel.creatingNote = getCreatingNote();

        String creatingNote = rmaRequestCacheModel.creatingNote;

        if ((creatingNote != null) && (creatingNote.length() == 0)) {
            rmaRequestCacheModel.creatingNote = null;
        }

        rmaRequestCacheModel.partnerCode = getPartnerCode();

        String partnerCode = rmaRequestCacheModel.partnerCode;

        if ((partnerCode != null) && (partnerCode.length() == 0)) {
            rmaRequestCacheModel.partnerCode = null;
        }

        rmaRequestCacheModel.partnerInCharge = getPartnerInCharge();

        String partnerInCharge = rmaRequestCacheModel.partnerInCharge;

        if ((partnerInCharge != null) && (partnerInCharge.length() == 0)) {
            rmaRequestCacheModel.partnerInCharge = null;
        }

        rmaRequestCacheModel.partnerEmail = getPartnerEmail();

        String partnerEmail = rmaRequestCacheModel.partnerEmail;

        if ((partnerEmail != null) && (partnerEmail.length() == 0)) {
            rmaRequestCacheModel.partnerEmail = null;
        }

        rmaRequestCacheModel.partnerPhone = getPartnerPhone();

        String partnerPhone = rmaRequestCacheModel.partnerPhone;

        if ((partnerPhone != null) && (partnerPhone.length() == 0)) {
            rmaRequestCacheModel.partnerPhone = null;
        }

        rmaRequestCacheModel.partnerLocation = getPartnerLocation();

        String partnerLocation = rmaRequestCacheModel.partnerLocation;

        if ((partnerLocation != null) && (partnerLocation.length() == 0)) {
            rmaRequestCacheModel.partnerLocation = null;
        }

        Date sendingEstReturnDate = getSendingEstReturnDate();

        if (sendingEstReturnDate != null) {
            rmaRequestCacheModel.sendingEstReturnDate = sendingEstReturnDate.getTime();
        } else {
            rmaRequestCacheModel.sendingEstReturnDate = Long.MIN_VALUE;
        }

        Date sendingReturnedDate = getSendingReturnedDate();

        if (sendingReturnedDate != null) {
            rmaRequestCacheModel.sendingReturnedDate = sendingReturnedDate.getTime();
        } else {
            rmaRequestCacheModel.sendingReturnedDate = Long.MIN_VALUE;
        }

        Date sendingAssignedDate = getSendingAssignedDate();

        if (sendingAssignedDate != null) {
            rmaRequestCacheModel.sendingAssignedDate = sendingAssignedDate.getTime();
        } else {
            rmaRequestCacheModel.sendingAssignedDate = Long.MIN_VALUE;
        }

        rmaRequestCacheModel.sendingNote = getSendingNote();

        String sendingNote = rmaRequestCacheModel.sendingNote;

        if ((sendingNote != null) && (sendingNote.length() == 0)) {
            rmaRequestCacheModel.sendingNote = null;
        }

        Date receivingReturnedDate = getReceivingReturnedDate();

        if (receivingReturnedDate != null) {
            rmaRequestCacheModel.receivingReturnedDate = receivingReturnedDate.getTime();
        } else {
            rmaRequestCacheModel.receivingReturnedDate = Long.MIN_VALUE;
        }

        rmaRequestCacheModel.receivingNote = getReceivingNote();

        String receivingNote = rmaRequestCacheModel.receivingNote;

        if ((receivingNote != null) && (receivingNote.length() == 0)) {
            rmaRequestCacheModel.receivingNote = null;
        }

        Date returningReturnedDate = getReturningReturnedDate();

        if (returningReturnedDate != null) {
            rmaRequestCacheModel.returningReturnedDate = returningReturnedDate.getTime();
        } else {
            rmaRequestCacheModel.returningReturnedDate = Long.MIN_VALUE;
        }

        rmaRequestCacheModel.returningNote = getReturningNote();

        String returningNote = rmaRequestCacheModel.returningNote;

        if ((returningNote != null) && (returningNote.length() == 0)) {
            rmaRequestCacheModel.returningNote = null;
        }

        rmaRequestCacheModel.status = getStatus();

        rmaRequestCacheModel.statusByUserId = getStatusByUserId();

        Date statusDate = getStatusDate();

        if (statusDate != null) {
            rmaRequestCacheModel.statusDate = statusDate.getTime();
        } else {
            rmaRequestCacheModel.statusDate = Long.MIN_VALUE;
        }

        return rmaRequestCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(71);

        sb.append("{uuid=");
        sb.append(getUuid());
        sb.append(", rmaRequestId=");
        sb.append(getRmaRequestId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", rmaRequestNumber=");
        sb.append(getRmaRequestNumber());
        sb.append(", cusCode=");
        sb.append(getCusCode());
        sb.append(", cusInCharge=");
        sb.append(getCusInCharge());
        sb.append(", cusEmail=");
        sb.append(getCusEmail());
        sb.append(", cusPhone=");
        sb.append(getCusPhone());
        sb.append(", cusLocation=");
        sb.append(getCusLocation());
        sb.append(", provInCharge=");
        sb.append(getProvInCharge());
        sb.append(", creatingEstReturnDate=");
        sb.append(getCreatingEstReturnDate());
        sb.append(", creatingReturnedDate=");
        sb.append(getCreatingReturnedDate());
        sb.append(", creatingAssignedDate=");
        sb.append(getCreatingAssignedDate());
        sb.append(", creatingNote=");
        sb.append(getCreatingNote());
        sb.append(", partnerCode=");
        sb.append(getPartnerCode());
        sb.append(", partnerInCharge=");
        sb.append(getPartnerInCharge());
        sb.append(", partnerEmail=");
        sb.append(getPartnerEmail());
        sb.append(", partnerPhone=");
        sb.append(getPartnerPhone());
        sb.append(", partnerLocation=");
        sb.append(getPartnerLocation());
        sb.append(", sendingEstReturnDate=");
        sb.append(getSendingEstReturnDate());
        sb.append(", sendingReturnedDate=");
        sb.append(getSendingReturnedDate());
        sb.append(", sendingAssignedDate=");
        sb.append(getSendingAssignedDate());
        sb.append(", sendingNote=");
        sb.append(getSendingNote());
        sb.append(", receivingReturnedDate=");
        sb.append(getReceivingReturnedDate());
        sb.append(", receivingNote=");
        sb.append(getReceivingNote());
        sb.append(", returningReturnedDate=");
        sb.append(getReturningReturnedDate());
        sb.append(", returningNote=");
        sb.append(getReturningNote());
        sb.append(", status=");
        sb.append(getStatus());
        sb.append(", statusByUserId=");
        sb.append(getStatusByUserId());
        sb.append(", statusDate=");
        sb.append(getStatusDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(109);

        sb.append("<model><model-name>");
        sb.append("com.dasannetworks.vn.sb.model.RmaRequest");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>uuid</column-name><column-value><![CDATA[");
        sb.append(getUuid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rmaRequestId</column-name><column-value><![CDATA[");
        sb.append(getRmaRequestId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rmaRequestNumber</column-name><column-value><![CDATA[");
        sb.append(getRmaRequestNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusCode</column-name><column-value><![CDATA[");
        sb.append(getCusCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusInCharge</column-name><column-value><![CDATA[");
        sb.append(getCusInCharge());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusEmail</column-name><column-value><![CDATA[");
        sb.append(getCusEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusPhone</column-name><column-value><![CDATA[");
        sb.append(getCusPhone());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cusLocation</column-name><column-value><![CDATA[");
        sb.append(getCusLocation());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>provInCharge</column-name><column-value><![CDATA[");
        sb.append(getProvInCharge());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingEstReturnDate</column-name><column-value><![CDATA[");
        sb.append(getCreatingEstReturnDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingReturnedDate</column-name><column-value><![CDATA[");
        sb.append(getCreatingReturnedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingAssignedDate</column-name><column-value><![CDATA[");
        sb.append(getCreatingAssignedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>creatingNote</column-name><column-value><![CDATA[");
        sb.append(getCreatingNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerCode</column-name><column-value><![CDATA[");
        sb.append(getPartnerCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerInCharge</column-name><column-value><![CDATA[");
        sb.append(getPartnerInCharge());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerEmail</column-name><column-value><![CDATA[");
        sb.append(getPartnerEmail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerPhone</column-name><column-value><![CDATA[");
        sb.append(getPartnerPhone());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>partnerLocation</column-name><column-value><![CDATA[");
        sb.append(getPartnerLocation());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingEstReturnDate</column-name><column-value><![CDATA[");
        sb.append(getSendingEstReturnDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingReturnedDate</column-name><column-value><![CDATA[");
        sb.append(getSendingReturnedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingAssignedDate</column-name><column-value><![CDATA[");
        sb.append(getSendingAssignedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sendingNote</column-name><column-value><![CDATA[");
        sb.append(getSendingNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>receivingReturnedDate</column-name><column-value><![CDATA[");
        sb.append(getReceivingReturnedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>receivingNote</column-name><column-value><![CDATA[");
        sb.append(getReceivingNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>returningReturnedDate</column-name><column-value><![CDATA[");
        sb.append(getReturningReturnedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>returningNote</column-name><column-value><![CDATA[");
        sb.append(getReturningNote());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>status</column-name><column-value><![CDATA[");
        sb.append(getStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
        sb.append(getStatusByUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>statusDate</column-name><column-value><![CDATA[");
        sb.append(getStatusDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
