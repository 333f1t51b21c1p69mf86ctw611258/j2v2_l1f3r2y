package com.dasannetworks.vn.sb.model.impl;

import com.dasannetworks.vn.sb.model.WarrantyForm;
import com.dasannetworks.vn.sb.model.WarrantyFormModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the WarrantyForm service. Represents a row in the &quot;tms_WarrantyForm&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.dasannetworks.vn.sb.model.WarrantyFormModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WarrantyFormImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WarrantyFormImpl
 * @see com.dasannetworks.vn.sb.model.WarrantyForm
 * @see com.dasannetworks.vn.sb.model.WarrantyFormModel
 * @generated
 */
public class WarrantyFormModelImpl extends BaseModelImpl<WarrantyForm>
    implements WarrantyFormModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a warranty form model instance should use the {@link com.dasannetworks.vn.sb.model.WarrantyForm} interface instead.
     */
    public static final String TABLE_NAME = "tms_WarrantyForm";
    public static final Object[][] TABLE_COLUMNS = {
            { "warrantyFormId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "customerCode", Types.VARCHAR },
            { "warrantyStartDate", Types.TIMESTAMP },
            { "warrantyEndDate", Types.TIMESTAMP },
            { "originalDeviceId", Types.BIGINT },
            { "currentDeviceId", Types.BIGINT },
            { "remark", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table tms_WarrantyForm (warrantyFormId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,customerCode VARCHAR(75) null,warrantyStartDate DATE null,warrantyEndDate DATE null,originalDeviceId LONG,currentDeviceId LONG,remark VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table tms_WarrantyForm";
    public static final String ORDER_BY_JPQL = " ORDER BY warrantyForm.warrantyFormId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY tms_WarrantyForm.warrantyFormId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.dasannetworks.vn.sb.model.WarrantyForm"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.dasannetworks.vn.sb.model.WarrantyForm"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.dasannetworks.vn.sb.model.WarrantyForm"));
    private static ClassLoader _classLoader = WarrantyForm.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            WarrantyForm.class
        };
    private long _warrantyFormId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private String _customerCode;
    private Date _warrantyStartDate;
    private Date _warrantyEndDate;
    private long _originalDeviceId;
    private long _currentDeviceId;
    private String _remark;
    private WarrantyForm _escapedModel;

    public WarrantyFormModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _warrantyFormId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setWarrantyFormId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _warrantyFormId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return WarrantyForm.class;
    }

    @Override
    public String getModelClassName() {
        return WarrantyForm.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("warrantyFormId", getWarrantyFormId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("customerCode", getCustomerCode());
        attributes.put("warrantyStartDate", getWarrantyStartDate());
        attributes.put("warrantyEndDate", getWarrantyEndDate());
        attributes.put("originalDeviceId", getOriginalDeviceId());
        attributes.put("currentDeviceId", getCurrentDeviceId());
        attributes.put("remark", getRemark());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long warrantyFormId = (Long) attributes.get("warrantyFormId");

        if (warrantyFormId != null) {
            setWarrantyFormId(warrantyFormId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String customerCode = (String) attributes.get("customerCode");

        if (customerCode != null) {
            setCustomerCode(customerCode);
        }

        Date warrantyStartDate = (Date) attributes.get("warrantyStartDate");

        if (warrantyStartDate != null) {
            setWarrantyStartDate(warrantyStartDate);
        }

        Date warrantyEndDate = (Date) attributes.get("warrantyEndDate");

        if (warrantyEndDate != null) {
            setWarrantyEndDate(warrantyEndDate);
        }

        Long originalDeviceId = (Long) attributes.get("originalDeviceId");

        if (originalDeviceId != null) {
            setOriginalDeviceId(originalDeviceId);
        }

        Long currentDeviceId = (Long) attributes.get("currentDeviceId");

        if (currentDeviceId != null) {
            setCurrentDeviceId(currentDeviceId);
        }

        String remark = (String) attributes.get("remark");

        if (remark != null) {
            setRemark(remark);
        }
    }

    @Override
    public long getWarrantyFormId() {
        return _warrantyFormId;
    }

    @Override
    public void setWarrantyFormId(long warrantyFormId) {
        _warrantyFormId = warrantyFormId;
    }

    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getCustomerCode() {
        if (_customerCode == null) {
            return StringPool.BLANK;
        } else {
            return _customerCode;
        }
    }

    @Override
    public void setCustomerCode(String customerCode) {
        _customerCode = customerCode;
    }

    @Override
    public Date getWarrantyStartDate() {
        return _warrantyStartDate;
    }

    @Override
    public void setWarrantyStartDate(Date warrantyStartDate) {
        _warrantyStartDate = warrantyStartDate;
    }

    @Override
    public Date getWarrantyEndDate() {
        return _warrantyEndDate;
    }

    @Override
    public void setWarrantyEndDate(Date warrantyEndDate) {
        _warrantyEndDate = warrantyEndDate;
    }

    @Override
    public long getOriginalDeviceId() {
        return _originalDeviceId;
    }

    @Override
    public void setOriginalDeviceId(long originalDeviceId) {
        _originalDeviceId = originalDeviceId;
    }

    @Override
    public long getCurrentDeviceId() {
        return _currentDeviceId;
    }

    @Override
    public void setCurrentDeviceId(long currentDeviceId) {
        _currentDeviceId = currentDeviceId;
    }

    @Override
    public String getRemark() {
        if (_remark == null) {
            return StringPool.BLANK;
        } else {
            return _remark;
        }
    }

    @Override
    public void setRemark(String remark) {
        _remark = remark;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            WarrantyForm.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public WarrantyForm toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (WarrantyForm) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        WarrantyFormImpl warrantyFormImpl = new WarrantyFormImpl();

        warrantyFormImpl.setWarrantyFormId(getWarrantyFormId());
        warrantyFormImpl.setCompanyId(getCompanyId());
        warrantyFormImpl.setUserId(getUserId());
        warrantyFormImpl.setUserName(getUserName());
        warrantyFormImpl.setCreateDate(getCreateDate());
        warrantyFormImpl.setModifiedDate(getModifiedDate());
        warrantyFormImpl.setCustomerCode(getCustomerCode());
        warrantyFormImpl.setWarrantyStartDate(getWarrantyStartDate());
        warrantyFormImpl.setWarrantyEndDate(getWarrantyEndDate());
        warrantyFormImpl.setOriginalDeviceId(getOriginalDeviceId());
        warrantyFormImpl.setCurrentDeviceId(getCurrentDeviceId());
        warrantyFormImpl.setRemark(getRemark());

        warrantyFormImpl.resetOriginalValues();

        return warrantyFormImpl;
    }

    @Override
    public int compareTo(WarrantyForm warrantyForm) {
        long primaryKey = warrantyForm.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof WarrantyForm)) {
            return false;
        }

        WarrantyForm warrantyForm = (WarrantyForm) obj;

        long primaryKey = warrantyForm.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<WarrantyForm> toCacheModel() {
        WarrantyFormCacheModel warrantyFormCacheModel = new WarrantyFormCacheModel();

        warrantyFormCacheModel.warrantyFormId = getWarrantyFormId();

        warrantyFormCacheModel.companyId = getCompanyId();

        warrantyFormCacheModel.userId = getUserId();

        warrantyFormCacheModel.userName = getUserName();

        String userName = warrantyFormCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            warrantyFormCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            warrantyFormCacheModel.createDate = createDate.getTime();
        } else {
            warrantyFormCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            warrantyFormCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            warrantyFormCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        warrantyFormCacheModel.customerCode = getCustomerCode();

        String customerCode = warrantyFormCacheModel.customerCode;

        if ((customerCode != null) && (customerCode.length() == 0)) {
            warrantyFormCacheModel.customerCode = null;
        }

        Date warrantyStartDate = getWarrantyStartDate();

        if (warrantyStartDate != null) {
            warrantyFormCacheModel.warrantyStartDate = warrantyStartDate.getTime();
        } else {
            warrantyFormCacheModel.warrantyStartDate = Long.MIN_VALUE;
        }

        Date warrantyEndDate = getWarrantyEndDate();

        if (warrantyEndDate != null) {
            warrantyFormCacheModel.warrantyEndDate = warrantyEndDate.getTime();
        } else {
            warrantyFormCacheModel.warrantyEndDate = Long.MIN_VALUE;
        }

        warrantyFormCacheModel.originalDeviceId = getOriginalDeviceId();

        warrantyFormCacheModel.currentDeviceId = getCurrentDeviceId();

        warrantyFormCacheModel.remark = getRemark();

        String remark = warrantyFormCacheModel.remark;

        if ((remark != null) && (remark.length() == 0)) {
            warrantyFormCacheModel.remark = null;
        }

        return warrantyFormCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(25);

        sb.append("{warrantyFormId=");
        sb.append(getWarrantyFormId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", customerCode=");
        sb.append(getCustomerCode());
        sb.append(", warrantyStartDate=");
        sb.append(getWarrantyStartDate());
        sb.append(", warrantyEndDate=");
        sb.append(getWarrantyEndDate());
        sb.append(", originalDeviceId=");
        sb.append(getOriginalDeviceId());
        sb.append(", currentDeviceId=");
        sb.append(getCurrentDeviceId());
        sb.append(", remark=");
        sb.append(getRemark());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(40);

        sb.append("<model><model-name>");
        sb.append("com.dasannetworks.vn.sb.model.WarrantyForm");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>warrantyFormId</column-name><column-value><![CDATA[");
        sb.append(getWarrantyFormId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerCode</column-name><column-value><![CDATA[");
        sb.append(getCustomerCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>warrantyStartDate</column-name><column-value><![CDATA[");
        sb.append(getWarrantyStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>warrantyEndDate</column-name><column-value><![CDATA[");
        sb.append(getWarrantyEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>originalDeviceId</column-name><column-value><![CDATA[");
        sb.append(getOriginalDeviceId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>currentDeviceId</column-name><column-value><![CDATA[");
        sb.append(getCurrentDeviceId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>remark</column-name><column-value><![CDATA[");
        sb.append(getRemark());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
